Version 52.0

Constant Pool size 67
1: Tag 10 MethodRef Class index 2, Name and type index 3
2: Tag 7 Class Name index 4
3: Tag 12 NameAndType Name index 5, Description index 6
4: Tag 1 Utf8 Value "java/lang/Object"
5: Tag 1 Utf8 Value "<init>"
6: Tag 1 Utf8 Value "()V"
7: Tag 9 FieldRef Class index 8, Name and type index 9
8: Tag 7 Class Name index 10
9: Tag 12 NameAndType Name index 11, Description index 12
10: Tag 1 Utf8 Value "org/jboss/as/ee/logging/EeLogger"
11: Tag 1 Utf8 Value "ROOT_LOGGER"
12: Tag 1 Utf8 Value "Lorg/jboss/as/ee/logging/EeLogger;"
13: Tag 8 String Contents 14
14: Tag 1 Utf8 Value "contextKey"
15: Tag 11 InterfaceMethodRef Class index 8, Name and type index 16
16: Tag 12 NameAndType Name index 17, Description index 18
17: Tag 1 Utf8 Value "nullVar"
18: Tag 1 Utf8 Value "(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;"
19: Tag 9 FieldRef Class index 20, Name and type index 21
20: Tag 7 Class Name index 22
21: Tag 12 NameAndType Name index 14, Description index 23
22: Tag 1 Utf8 Value "org/jboss/as/ee/component/ManagedReferenceReleaseInterceptor"
23: Tag 1 Utf8 Value "Ljava/lang/Object;"
24: Tag 10 MethodRef Class index 25, Name and type index 26
25: Tag 7 Class Name index 27
26: Tag 12 NameAndType Name index 28, Description index 29
27: Tag 1 Utf8 Value "org/jboss/invocation/InterceptorContext"
28: Tag 1 Utf8 Value "proceed"
29: Tag 1 Utf8 Value "()Ljava/lang/Object;"
30: Tag 7 Class Name index 31
31: Tag 1 Utf8 Value "org/jboss/as/ee/component/ComponentInstance"
32: Tag 10 MethodRef Class index 25, Name and type index 33
33: Tag 12 NameAndType Name index 34, Description index 35
34: Tag 1 Utf8 Value "getPrivateData"
35: Tag 1 Utf8 Value "(Ljava/lang/Class;)Ljava/lang/Object;"
36: Tag 11 InterfaceMethodRef Class index 30, Name and type index 37
37: Tag 12 NameAndType Name index 38, Description index 39
38: Tag 1 Utf8 Value "getInstanceData"
39: Tag 1 Utf8 Value "(Ljava/lang/Object;)Ljava/lang/Object;"
40: Tag 7 Class Name index 41
41: Tag 1 Utf8 Value "org/jboss/as/naming/ManagedReference"
42: Tag 11 InterfaceMethodRef Class index 40, Name and type index 43
43: Tag 12 NameAndType Name index 44, Description index 6
44: Tag 1 Utf8 Value "release"
45: Tag 7 Class Name index 46
46: Tag 1 Utf8 Value "org/jboss/invocation/Interceptor"
47: Tag 1 Utf8 Value "(Ljava/lang/Object;)V"
48: Tag 1 Utf8 Value "Code"
49: Tag 1 Utf8 Value "LineNumberTable"
50: Tag 1 Utf8 Value "LocalVariableTable"
51: Tag 1 Utf8 Value "this"
52: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/ManagedReferenceReleaseInterceptor;"
53: Tag 1 Utf8 Value "StackMapTable"
54: Tag 1 Utf8 Value "processInvocation"
55: Tag 1 Utf8 Value "(Lorg/jboss/invocation/InterceptorContext;)Ljava/lang/Object;"
56: Tag 1 Utf8 Value "managedReference"
57: Tag 1 Utf8 Value "Lorg/jboss/as/naming/ManagedReference;"
58: Tag 1 Utf8 Value "context"
59: Tag 1 Utf8 Value "Lorg/jboss/invocation/InterceptorContext;"
60: Tag 7 Class Name index 61
61: Tag 1 Utf8 Value "java/lang/Throwable"
62: Tag 1 Utf8 Value "Exceptions"
63: Tag 7 Class Name index 64
64: Tag 1 Utf8 Value "java/lang/Exception"
65: Tag 1 Utf8 Value "SourceFile"
66: Tag 1 Utf8 Value "ManagedReferenceReleaseInterceptor.java"

Flags: decimal 32, hex 0020, binary 0000000000100000 super

This class: id 20, name org.jboss.as.ee.component.ManagedReferenceReleaseInterceptor

Super class: id 2, name java.lang.Object

Implements class ids 45
Implements names org.jboss.invocation.Interceptor

Field name contextKey (index 14), type Ljava/lang/Object; (descriptor index 23)
Human type: java.lang.Object
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes

Method name <init> (index 5), type (Ljava/lang/Object;)V (descriptor index 47)
Human type: (java.lang.Object): void
Flags: decimal 0, hex 0000, binary 0000000000000000
Method attribute name Code, size 114
Method name processInvocation (index 54), type (Lorg/jboss/invocation/InterceptorContext;)Ljava/lang/Object; (descriptor index 55)
Human type: (org.jboss.invocation.InterceptorContext): java.lang.Object
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 237
Method attribute name Exceptions, size 4

Class attribute name SourceFile, size 2
