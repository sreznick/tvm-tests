AAAA 2
Version 52.0

Constant Pool size 152
1: Tag 10 MethodRef Class index 31, Name and type index 110
2: Tag 11 InterfaceMethodRef Class index 33, Name and type index 111
3: Tag 9 FieldRef Class index 30, Name and type index 112
4: Tag 11 InterfaceMethodRef Class index 113, Name and type index 114
5: Tag 11 InterfaceMethodRef Class index 113, Name and type index 115
6: Tag 11 InterfaceMethodRef Class index 113, Name and type index 116
7: Tag 11 InterfaceMethodRef Class index 113, Name and type index 117
8: Tag 11 InterfaceMethodRef Class index 113, Name and type index 118
9: Tag 11 InterfaceMethodRef Class index 113, Name and type index 119
10: Tag 11 InterfaceMethodRef Class index 113, Name and type index 120
11: Tag 11 InterfaceMethodRef Class index 113, Name and type index 121
12: Tag 11 InterfaceMethodRef Class index 113, Name and type index 122
13: Tag 11 InterfaceMethodRef Class index 113, Name and type index 123
14: Tag 11 InterfaceMethodRef Class index 113, Name and type index 124
15: Tag 11 InterfaceMethodRef Class index 113, Name and type index 125
16: Tag 11 InterfaceMethodRef Class index 113, Name and type index 126
17: Tag 11 InterfaceMethodRef Class index 113, Name and type index 127
18: Tag 11 InterfaceMethodRef Class index 113, Name and type index 128
19: Tag 11 InterfaceMethodRef Class index 113, Name and type index 129
20: Tag 11 InterfaceMethodRef Class index 113, Name and type index 130
21: Tag 11 InterfaceMethodRef Class index 113, Name and type index 131
22: Tag 11 InterfaceMethodRef Class index 113, Name and type index 132
23: Tag 11 InterfaceMethodRef Class index 113, Name and type index 133
24: Tag 11 InterfaceMethodRef Class index 113, Name and type index 134
25: Tag 11 InterfaceMethodRef Class index 113, Name and type index 135
26: Tag 11 InterfaceMethodRef Class index 113, Name and type index 136
27: Tag 11 InterfaceMethodRef Class index 113, Name and type index 137
28: Tag 11 InterfaceMethodRef Class index 113, Name and type index 138
29: Tag 11 InterfaceMethodRef Class index 113, Name and type index 139
30: Tag 7 Class Name index 140
31: Tag 7 Class Name index 141
32: Tag 7 Class Name index 142
33: Tag 7 Class Name index 144
34: Tag 1 Utf8 Value "writer"
35: Tag 1 Utf8 Value "Lorg/infinispan/protostream/TagWriter;"
36: Tag 1 Utf8 Value "<init>"
37: Tag 1 Utf8 Value "WriteContext"
38: Tag 1 Utf8 Value "InnerClasses"
39: Tag 1 Utf8 Value "(Lorg/infinispan/protostream/ProtobufTagMarshaller$WriteContext;)V"
40: Tag 1 Utf8 Value "Code"
41: Tag 1 Utf8 Value "LineNumberTable"
42: Tag 1 Utf8 Value "LocalVariableTable"
43: Tag 1 Utf8 Value "this"
44: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/AbstractProtoStreamWriter;"
45: Tag 1 Utf8 Value "context"
46: Tag 1 Utf8 Value "Lorg/infinispan/protostream/ProtobufTagMarshaller$WriteContext;"
47: Tag 1 Utf8 Value "getWriter"
48: Tag 1 Utf8 Value "()Lorg/infinispan/protostream/TagWriter;"
49: Tag 1 Utf8 Value "writeTag"
50: Tag 1 Utf8 Value "(II)V"
51: Tag 1 Utf8 Value "number"
52: Tag 1 Utf8 Value "I"
53: Tag 1 Utf8 Value "wireType"
54: Tag 1 Utf8 Value "Exceptions"
55: Tag 7 Class Name index 145
56: Tag 1 Utf8 Value "(ILorg/infinispan/protostream/descriptors/WireType;)V"
57: Tag 1 Utf8 Value "Lorg/infinispan/protostream/descriptors/WireType;"
58: Tag 1 Utf8 Value "writeVarint32"
59: Tag 1 Utf8 Value "(I)V"
60: Tag 1 Utf8 Value "value"
61: Tag 1 Utf8 Value "writeVarint64"
62: Tag 1 Utf8 Value "(J)V"
63: Tag 1 Utf8 Value "J"
64: Tag 1 Utf8 Value "writeRawByte"
65: Tag 1 Utf8 Value "(B)V"
66: Tag 1 Utf8 Value "B"
67: Tag 1 Utf8 Value "Deprecated"
68: Tag 1 Utf8 Value "RuntimeVisibleAnnotations"
69: Tag 1 Utf8 Value "Ljava/lang/Deprecated;"
70: Tag 1 Utf8 Value "writeRawBytes"
71: Tag 1 Utf8 Value "([BII)V"
72: Tag 1 Utf8 Value "[B"
73: Tag 1 Utf8 Value "offset"
74: Tag 1 Utf8 Value "length"
75: Tag 1 Utf8 Value "(Ljava/nio/ByteBuffer;)V"
76: Tag 1 Utf8 Value "Ljava/nio/ByteBuffer;"
77: Tag 1 Utf8 Value "writeBool"
78: Tag 1 Utf8 Value "(IZ)V"
79: Tag 1 Utf8 Value "index"
80: Tag 1 Utf8 Value "Z"
81: Tag 1 Utf8 Value "writeEnum"
82: Tag 1 Utf8 Value "writeInt32"
83: Tag 1 Utf8 Value "writeFixed32"
84: Tag 1 Utf8 Value "writeUInt32"
85: Tag 1 Utf8 Value "writeSInt32"
86: Tag 1 Utf8 Value "writeSFixed32"
87: Tag 1 Utf8 Value "writeInt64"
88: Tag 1 Utf8 Value "(IJ)V"
89: Tag 1 Utf8 Value "writeFixed64"
90: Tag 1 Utf8 Value "writeUInt64"
91: Tag 1 Utf8 Value "writeSInt64"
92: Tag 1 Utf8 Value "writeSFixed64"
93: Tag 1 Utf8 Value "writeFloat"
94: Tag 1 Utf8 Value "(IF)V"
95: Tag 1 Utf8 Value "F"
96: Tag 1 Utf8 Value "writeDouble"
97: Tag 1 Utf8 Value "(ID)V"
98: Tag 1 Utf8 Value "D"
99: Tag 1 Utf8 Value "writeBytes"
100: Tag 1 Utf8 Value "(I[B)V"
101: Tag 1 Utf8 Value "(I[BII)V"
102: Tag 1 Utf8 Value "(ILjava/nio/ByteBuffer;)V"
103: Tag 1 Utf8 Value "writeString"
104: Tag 1 Utf8 Value "(ILjava/lang/String;)V"
105: Tag 1 Utf8 Value "Ljava/lang/String;"
106: Tag 1 Utf8 Value "flush"
107: Tag 1 Utf8 Value "()V"
108: Tag 1 Utf8 Value "SourceFile"
109: Tag 1 Utf8 Value "AbstractProtoStreamWriter.java"
110: Tag 12 NameAndType Name index 36, Description index 148
111: Tag 12 NameAndType Name index 47, Description index 48
112: Tag 12 NameAndType Name index 34, Description index 35
113: Tag 7 Class Name index 149
114: Tag 12 NameAndType Name index 49, Description index 50
115: Tag 12 NameAndType Name index 49, Description index 56
116: Tag 12 NameAndType Name index 58, Description index 59
117: Tag 12 NameAndType Name index 61, Description index 62
118: Tag 12 NameAndType Name index 64, Description index 65
119: Tag 12 NameAndType Name index 70, Description index 71
120: Tag 12 NameAndType Name index 70, Description index 75
121: Tag 12 NameAndType Name index 77, Description index 78
122: Tag 12 NameAndType Name index 81, Description index 50
123: Tag 12 NameAndType Name index 82, Description index 50
124: Tag 12 NameAndType Name index 83, Description index 50
125: Tag 12 NameAndType Name index 84, Description index 50
126: Tag 12 NameAndType Name index 85, Description index 50
127: Tag 12 NameAndType Name index 86, Description index 50
128: Tag 12 NameAndType Name index 87, Description index 88
129: Tag 12 NameAndType Name index 89, Description index 88
130: Tag 12 NameAndType Name index 90, Description index 88
131: Tag 12 NameAndType Name index 91, Description index 88
132: Tag 12 NameAndType Name index 92, Description index 88
133: Tag 12 NameAndType Name index 93, Description index 94
134: Tag 12 NameAndType Name index 96, Description index 97
135: Tag 12 NameAndType Name index 99, Description index 100
136: Tag 12 NameAndType Name index 99, Description index 101
137: Tag 12 NameAndType Name index 99, Description index 102
138: Tag 12 NameAndType Name index 103, Description index 104
139: Tag 12 NameAndType Name index 106, Description index 107
140: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/AbstractProtoStreamWriter"
141: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/DefaultProtoStreamOperation"
142: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/ProtoStreamWriter"
143: Tag 7 Class Name index 150
144: Tag 1 Utf8 Value "org/infinispan/protostream/ProtobufTagMarshaller$WriteContext"
145: Tag 1 Utf8 Value "java/io/IOException"
146: Tag 7 Class Name index 151
147: Tag 1 Utf8 Value "OperationContext"
148: Tag 1 Utf8 Value "(Lorg/infinispan/protostream/ProtobufTagMarshaller$OperationContext;)V"
149: Tag 1 Utf8 Value "org/infinispan/protostream/TagWriter"
150: Tag 1 Utf8 Value "org/infinispan/protostream/ProtobufTagMarshaller"
151: Tag 1 Utf8 Value "org/infinispan/protostream/ProtobufTagMarshaller$OperationContext"

Flags: decimal 1057, hex 0421, binary 0000010000100001 public super abstract

This class: id 30, name org.wildfly.clustering.marshalling.protostream.AbstractProtoStreamWriter

Super class: id 31, name org.wildfly.clustering.marshalling.protostream.DefaultProtoStreamOperation

Implements class ids 32 33
Implements names org.wildfly.clustering.marshalling.protostream.ProtoStreamWriter org.infinispan.protostream.ProtobufTagMarshaller$WriteContext

Field name writer (index 34), type Lorg/infinispan/protostream/TagWriter; (descriptor index 35)
Human type: org.infinispan.protostream.TagWriter
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes

Method name <init> (index 36), type (Lorg/infinispan/protostream/ProtobufTagMarshaller$WriteContext;)V (descriptor index 39)
Human type: (org.infinispan.protostream.ProtobufTagMarshaller$WriteContext): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 76
Method name getWriter (index 47), type ()Lorg/infinispan/protostream/TagWriter; (descriptor index 48)
Human type: (): org.infinispan.protostream.TagWriter
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name writeTag (index 49), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeTag (index 49), type (ILorg/infinispan/protostream/descriptors/WireType;)V (descriptor index 56)
Human type: (int, org.infinispan.protostream.descriptors.WireType): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeVarint32 (index 58), type (I)V (descriptor index 59)
Human type: (int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 67
Method attribute name Exceptions, size 4
Method name writeVarint64 (index 61), type (J)V (descriptor index 62)
Human type: (long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 67
Method attribute name Exceptions, size 4
Method name writeRawByte (index 64), type (B)V (descriptor index 65)
Human type: (byte): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 67
Method attribute name Exceptions, size 4
Method attribute name Deprecated, size 0
Method attribute name RuntimeVisibleAnnotations, size 6
Method name writeRawBytes (index 70), type ([BII)V (descriptor index 71)
Human type: (byte[], int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 89
Method attribute name Exceptions, size 4
Method name writeRawBytes (index 70), type (Ljava/nio/ByteBuffer;)V (descriptor index 75)
Human type: (java.nio.ByteBuffer): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 67
Method attribute name Exceptions, size 4
Method attribute name Deprecated, size 0
Method attribute name RuntimeVisibleAnnotations, size 6
Method name writeBool (index 77), type (IZ)V (descriptor index 78)
Human type: (int, boolean): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeEnum (index 81), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeInt32 (index 82), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeFixed32 (index 83), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeUInt32 (index 84), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeSInt32 (index 85), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeSFixed32 (index 86), type (II)V (descriptor index 50)
Human type: (int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeInt64 (index 87), type (IJ)V (descriptor index 88)
Human type: (int, long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeFixed64 (index 89), type (IJ)V (descriptor index 88)
Human type: (int, long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeUInt64 (index 90), type (IJ)V (descriptor index 88)
Human type: (int, long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeSInt64 (index 91), type (IJ)V (descriptor index 88)
Human type: (int, long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeSFixed64 (index 92), type (IJ)V (descriptor index 88)
Human type: (int, long): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeFloat (index 93), type (IF)V (descriptor index 94)
Human type: (int, float): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeDouble (index 96), type (ID)V (descriptor index 97)
Human type: (int, double): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeBytes (index 99), type (I[B)V (descriptor index 100)
Human type: (int, byte[]): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeBytes (index 99), type (I[BII)V (descriptor index 101)
Human type: (int, byte[], int, int): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 101
Method attribute name Exceptions, size 4
Method name writeBytes (index 99), type (ILjava/nio/ByteBuffer;)V (descriptor index 102)
Human type: (int, java.nio.ByteBuffer): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name writeString (index 103), type (ILjava/lang/String;)V (descriptor index 104)
Human type: (int, java.lang.String): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 78
Method attribute name Exceptions, size 4
Method name flush (index 106), type ()V (descriptor index 107)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 56
Method attribute name Exceptions, size 4

Class attribute name SourceFile, size 2
Class attribute name InnerClasses, size 18
