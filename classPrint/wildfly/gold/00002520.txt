Version 52.0

Constant Pool size 362
1: Tag 10 MethodRef Class index 105, Name and type index 201
2: Tag 7 Class Name index 202
3: Tag 9 FieldRef Class index 104, Name and type index 203
4: Tag 7 Class Name index 204
5: Tag 10 MethodRef Class index 4, Name and type index 205
6: Tag 9 FieldRef Class index 104, Name and type index 206
7: Tag 9 FieldRef Class index 104, Name and type index 207
8: Tag 9 FieldRef Class index 104, Name and type index 208
9: Tag 9 FieldRef Class index 104, Name and type index 209
10: Tag 9 FieldRef Class index 104, Name and type index 210
11: Tag 9 FieldRef Class index 104, Name and type index 211
12: Tag 10 MethodRef Class index 212, Name and type index 213
13: Tag 10 MethodRef Class index 214, Name and type index 215
14: Tag 10 MethodRef Class index 216, Name and type index 217
15: Tag 9 FieldRef Class index 104, Name and type index 218
16: Tag 8 String Contents 219
17: Tag 10 MethodRef Class index 216, Name and type index 220
18: Tag 10 MethodRef Class index 104, Name and type index 221
19: Tag 10 MethodRef Class index 104, Name and type index 222
20: Tag 10 MethodRef Class index 216, Name and type index 215
21: Tag 8 String Contents 223
22: Tag 10 MethodRef Class index 146, Name and type index 224
23: Tag 10 MethodRef Class index 146, Name and type index 225
24: Tag 10 MethodRef Class index 146, Name and type index 226
25: Tag 9 FieldRef Class index 104, Name and type index 227
26: Tag 9 FieldRef Class index 104, Name and type index 228
27: Tag 9 FieldRef Class index 104, Name and type index 229
28: Tag 10 MethodRef Class index 104, Name and type index 230
29: Tag 10 MethodRef Class index 104, Name and type index 231
30: Tag 10 MethodRef Class index 104, Name and type index 232
31: Tag 7 Class Name index 233
32: Tag 9 FieldRef Class index 234, Name and type index 235
33: Tag 10 MethodRef Class index 104, Name and type index 236
34: Tag 11 InterfaceMethodRef Class index 234, Name and type index 237
35: Tag 10 MethodRef Class index 216, Name and type index 238
36: Tag 10 MethodRef Class index 104, Name and type index 239
37: Tag 11 InterfaceMethodRef Class index 234, Name and type index 240
38: Tag 10 MethodRef Class index 241, Name and type index 242
39: Tag 10 MethodRef Class index 104, Name and type index 215
40: Tag 11 InterfaceMethodRef Class index 234, Name and type index 243
41: Tag 8 String Contents 156
42: Tag 10 MethodRef Class index 146, Name and type index 244
43: Tag 8 String Contents 158
44: Tag 8 String Contents 159
45: Tag 8 String Contents 162
46: Tag 11 InterfaceMethodRef Class index 234, Name and type index 245
47: Tag 10 MethodRef Class index 216, Name and type index 246
48: Tag 7 Class Name index 247
49: Tag 10 MethodRef Class index 48, Name and type index 201
50: Tag 8 String Contents 248
51: Tag 10 MethodRef Class index 48, Name and type index 249
52: Tag 10 MethodRef Class index 104, Name and type index 250
53: Tag 10 MethodRef Class index 48, Name and type index 242
54: Tag 10 MethodRef Class index 216, Name and type index 251
55: Tag 8 String Contents 252
56: Tag 10 MethodRef Class index 104, Name and type index 253
57: Tag 7 Class Name index 254
58: Tag 11 InterfaceMethodRef Class index 234, Name and type index 255
59: Tag 8 String Contents 256
60: Tag 10 MethodRef Class index 104, Name and type index 257
61: Tag 8 String Contents 258
62: Tag 8 String Contents 259
63: Tag 10 MethodRef Class index 104, Name and type index 260
64: Tag 8 String Contents 261
65: Tag 10 MethodRef Class index 104, Name and type index 262
66: Tag 8 String Contents 263
67: Tag 11 InterfaceMethodRef Class index 234, Name and type index 264
68: Tag 8 String Contents 265
69: Tag 8 String Contents 266
70: Tag 10 MethodRef Class index 104, Name and type index 267
71: Tag 8 String Contents 268
72: Tag 8 String Contents 269
73: Tag 8 String Contents 270
74: Tag 10 MethodRef Class index 104, Name and type index 271
75: Tag 11 InterfaceMethodRef Class index 234, Name and type index 272
76: Tag 8 String Contents 273
77: Tag 8 String Contents 274
78: Tag 10 MethodRef Class index 104, Name and type index 275
79: Tag 8 String Contents 276
80: Tag 8 String Contents 277
81: Tag 10 MethodRef Class index 104, Name and type index 278
82: Tag 11 InterfaceMethodRef Class index 234, Name and type index 279
83: Tag 8 String Contents 280
84: Tag 10 MethodRef Class index 104, Name and type index 281
85: Tag 10 MethodRef Class index 104, Name and type index 282
86: Tag 10 MethodRef Class index 283, Name and type index 284
87: Tag 8 String Contents 285
88: Tag 10 MethodRef Class index 104, Name and type index 286
89: Tag 11 InterfaceMethodRef Class index 234, Name and type index 287
90: Tag 10 MethodRef Class index 216, Name and type index 288
91: Tag 8 String Contents 289
92: Tag 10 MethodRef Class index 4, Name and type index 290
93: Tag 10 MethodRef Class index 104, Name and type index 291
94: Tag 10 MethodRef Class index 292, Name and type index 293
95: Tag 7 Class Name index 294
96: Tag 10 MethodRef Class index 104, Name and type index 295
97: Tag 8 String Contents 296
98: Tag 8 String Contents 297
99: Tag 7 Class Name index 298
100: Tag 10 MethodRef Class index 99, Name and type index 299
101: Tag 10 MethodRef Class index 95, Name and type index 300
102: Tag 10 MethodRef Class index 95, Name and type index 301
103: Tag 10 MethodRef Class index 104, Name and type index 302
104: Tag 7 Class Name index 303
105: Tag 7 Class Name index 304
106: Tag 7 Class Name index 305
107: Tag 1 Utf8 Value "log"
108: Tag 1 Utf8 Value "Lorg/jboss/logging/Logger;"
109: Tag 1 Utf8 Value "server"
110: Tag 1 Utf8 Value "Ljavax/management/MBeanServer;"
111: Tag 1 Utf8 Value "serviceName"
112: Tag 1 Utf8 Value "Ljavax/management/ObjectName;"
113: Tag 1 Utf8 Value "state"
114: Tag 1 Utf8 Value "I"
115: Tag 1 Utf8 Value "sequenceNumber"
116: Tag 1 Utf8 Value "Ljava/util/concurrent/atomic/AtomicLong;"
117: Tag 1 Utf8 Value "createIgnored"
118: Tag 1 Utf8 Value "Z"
119: Tag 1 Utf8 Value "startIgnored"
120: Tag 1 Utf8 Value "stopIgnored"
121: Tag 1 Utf8 Value "destroyIgnored"
122: Tag 1 Utf8 Value "unregisterIgnored"
123: Tag 1 Utf8 Value "<init>"
124: Tag 1 Utf8 Value "()V"
125: Tag 1 Utf8 Value "Code"
126: Tag 1 Utf8 Value "LineNumberTable"
127: Tag 1 Utf8 Value "LocalVariableTable"
128: Tag 1 Utf8 Value "this"
129: Tag 1 Utf8 Value "Lorg/jboss/system/ServiceMBeanSupport;"
130: Tag 1 Utf8 Value "(Ljava/lang/Class;)V"
131: Tag 1 Utf8 Value "type"
132: Tag 1 Utf8 Value "Ljava/lang/Class;"
133: Tag 1 Utf8 Value "LocalVariableTypeTable"
134: Tag 1 Utf8 Value "Ljava/lang/Class<*>;"
135: Tag 1 Utf8 Value "Signature"
136: Tag 1 Utf8 Value "(Ljava/lang/Class<*>;)V"
137: Tag 1 Utf8 Value "(Ljava/lang/String;)V"
138: Tag 1 Utf8 Value "category"
139: Tag 1 Utf8 Value "Ljava/lang/String;"
140: Tag 1 Utf8 Value "(Lorg/jboss/logging/Logger;)V"
141: Tag 1 Utf8 Value "getName"
142: Tag 1 Utf8 Value "()Ljava/lang/String;"
143: Tag 1 Utf8 Value "s"
144: Tag 1 Utf8 Value "i"
145: Tag 1 Utf8 Value "StackMapTable"
146: Tag 7 Class Name index 306
147: Tag 1 Utf8 Value "getServiceName"
148: Tag 1 Utf8 Value "()Ljavax/management/ObjectName;"
149: Tag 1 Utf8 Value "getServer"
150: Tag 1 Utf8 Value "()Ljavax/management/MBeanServer;"
151: Tag 1 Utf8 Value "getState"
152: Tag 1 Utf8 Value "()I"
153: Tag 1 Utf8 Value "getStateString"
154: Tag 1 Utf8 Value "getLog"
155: Tag 1 Utf8 Value "()Lorg/jboss/logging/Logger;"
156: Tag 1 Utf8 Value "create"
157: Tag 1 Utf8 Value "Exceptions"
158: Tag 1 Utf8 Value "start"
159: Tag 1 Utf8 Value "stop"
160: Tag 1 Utf8 Value "t"
161: Tag 1 Utf8 Value "Ljava/lang/Throwable;"
162: Tag 1 Utf8 Value "destroy"
163: Tag 1 Utf8 Value "jbossInternalDescription"
164: Tag 1 Utf8 Value "jbossInternalLifecycle"
165: Tag 1 Utf8 Value "method"
166: Tag 1 Utf8 Value "jbossInternalCreate"
167: Tag 1 Utf8 Value "e"
168: Tag 1 Utf8 Value "Ljava/lang/Exception;"
169: Tag 1 Utf8 Value "jbossInternalStart"
170: Tag 1 Utf8 Value "jbossInternalStop"
171: Tag 1 Utf8 Value "jbossInternalDestroy"
172: Tag 1 Utf8 Value "preRegister"
173: Tag 1 Utf8 Value "(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;"
174: Tag 1 Utf8 Value "name"
175: Tag 1 Utf8 Value "postRegister"
176: Tag 1 Utf8 Value "(Ljava/lang/Boolean;)V"
177: Tag 1 Utf8 Value "registrationDone"
178: Tag 1 Utf8 Value "Ljava/lang/Boolean;"
179: Tag 1 Utf8 Value "preDeregister"
180: Tag 1 Utf8 Value "postDeregister"
181: Tag 1 Utf8 Value "getObjectName"
182: Tag 7 Class Name index 307
183: Tag 1 Utf8 Value "createService"
184: Tag 1 Utf8 Value "startService"
185: Tag 1 Utf8 Value "stopService"
186: Tag 1 Utf8 Value "destroyService"
187: Tag 1 Utf8 Value "nextNotificationSequenceNumber"
188: Tag 1 Utf8 Value "()J"
189: Tag 1 Utf8 Value "getNextNotificationSequenceNumber"
190: Tag 1 Utf8 Value "sendStateChangeNotification"
191: Tag 1 Utf8 Value "(IILjava/lang/String;Ljava/lang/Throwable;)V"
192: Tag 1 Utf8 Value "oldState"
193: Tag 1 Utf8 Value "newState"
194: Tag 1 Utf8 Value "msg"
195: Tag 1 Utf8 Value "now"
196: Tag 1 Utf8 Value "J"
197: Tag 1 Utf8 Value "stateChangeNotification"
198: Tag 1 Utf8 Value "Ljavax/management/AttributeChangeNotification;"
199: Tag 1 Utf8 Value "SourceFile"
200: Tag 1 Utf8 Value "ServiceMBeanSupport.java"
201: Tag 12 NameAndType Name index 123, Description index 124
202: Tag 1 Utf8 Value "org/jboss/system/ServiceMBean"
203: Tag 12 NameAndType Name index 113, Description index 114
204: Tag 1 Utf8 Value "java/util/concurrent/atomic/AtomicLong"
205: Tag 12 NameAndType Name index 123, Description index 308
206: Tag 12 NameAndType Name index 115, Description index 116
207: Tag 12 NameAndType Name index 117, Description index 118
208: Tag 12 NameAndType Name index 119, Description index 118
209: Tag 12 NameAndType Name index 120, Description index 118
210: Tag 12 NameAndType Name index 121, Description index 118
211: Tag 12 NameAndType Name index 122, Description index 118
212: Tag 7 Class Name index 309
213: Tag 12 NameAndType Name index 310, Description index 311
214: Tag 7 Class Name index 312
215: Tag 12 NameAndType Name index 141, Description index 142
216: Tag 7 Class Name index 313
217: Tag 12 NameAndType Name index 314, Description index 315
218: Tag 12 NameAndType Name index 107, Description index 108
219: Tag 1 Utf8 Value "Constructing"
220: Tag 12 NameAndType Name index 316, Description index 317
221: Tag 12 NameAndType Name index 123, Description index 137
222: Tag 12 NameAndType Name index 123, Description index 140
223: Tag 1 Utf8 Value "."
224: Tag 12 NameAndType Name index 318, Description index 319
225: Tag 12 NameAndType Name index 320, Description index 152
226: Tag 12 NameAndType Name index 321, Description index 322
227: Tag 12 NameAndType Name index 111, Description index 112
228: Tag 12 NameAndType Name index 109, Description index 110
229: Tag 12 NameAndType Name index 323, Description index 324
230: Tag 12 NameAndType Name index 166, Description index 124
231: Tag 12 NameAndType Name index 169, Description index 124
232: Tag 12 NameAndType Name index 170, Description index 124
233: Tag 1 Utf8 Value "java/lang/Throwable"
234: Tag 7 Class Name index 325
235: Tag 12 NameAndType Name index 326, Description index 327
236: Tag 12 NameAndType Name index 163, Description index 142
237: Tag 12 NameAndType Name index 328, Description index 329
238: Tag 12 NameAndType Name index 330, Description index 331
239: Tag 12 NameAndType Name index 171, Description index 124
240: Tag 12 NameAndType Name index 332, Description index 329
241: Tag 7 Class Name index 333
242: Tag 12 NameAndType Name index 334, Description index 142
243: Tag 12 NameAndType Name index 335, Description index 336
244: Tag 12 NameAndType Name index 337, Description index 338
245: Tag 12 NameAndType Name index 339, Description index 340
246: Tag 12 NameAndType Name index 341, Description index 342
247: Tag 1 Utf8 Value "java/lang/StringBuilder"
248: Tag 1 Utf8 Value "Ignoring create call; current state is "
249: Tag 12 NameAndType Name index 343, Description index 344
250: Tag 12 NameAndType Name index 153, Description index 142
251: Tag 12 NameAndType Name index 345, Description index 317
252: Tag 1 Utf8 Value "Creating "
253: Tag 12 NameAndType Name index 183, Description index 124
254: Tag 1 Utf8 Value "java/lang/Exception"
255: Tag 12 NameAndType Name index 346, Description index 329
256: Tag 1 Utf8 Value "Created "
257: Tag 12 NameAndType Name index 158, Description index 124
258: Tag 1 Utf8 Value "Ignoring start call; current state is "
259: Tag 1 Utf8 Value " starting"
260: Tag 12 NameAndType Name index 190, Description index 191
261: Tag 1 Utf8 Value "Starting "
262: Tag 12 NameAndType Name index 184, Description index 124
263: Tag 1 Utf8 Value " failed"
264: Tag 12 NameAndType Name index 347, Description index 329
265: Tag 1 Utf8 Value " started"
266: Tag 1 Utf8 Value "Started "
267: Tag 12 NameAndType Name index 159, Description index 124
268: Tag 1 Utf8 Value "Ignoring stop call; current state is "
269: Tag 1 Utf8 Value " stopping"
270: Tag 1 Utf8 Value "Stopping "
271: Tag 12 NameAndType Name index 185, Description index 124
272: Tag 12 NameAndType Name index 348, Description index 329
273: Tag 1 Utf8 Value " stopped"
274: Tag 1 Utf8 Value "Stopped "
275: Tag 12 NameAndType Name index 162, Description index 124
276: Tag 1 Utf8 Value "Ignoring destroy call; current state is "
277: Tag 1 Utf8 Value "Destroying "
278: Tag 12 NameAndType Name index 186, Description index 124
279: Tag 12 NameAndType Name index 349, Description index 329
280: Tag 1 Utf8 Value "Destroyed "
281: Tag 12 NameAndType Name index 180, Description index 124
282: Tag 12 NameAndType Name index 181, Description index 173
283: Tag 7 Class Name index 350
284: Tag 12 NameAndType Name index 351, Description index 342
285: Tag 1 Utf8 Value "Registration is not done -> stop"
286: Tag 12 NameAndType Name index 156, Description index 124
287: Tag 12 NameAndType Name index 352, Description index 142
288: Tag 12 NameAndType Name index 353, Description index 331
289: Tag 1 Utf8 Value "Ignoring postDeregister call; current state is "
290: Tag 12 NameAndType Name index 354, Description index 188
291: Tag 12 NameAndType Name index 187, Description index 188
292: Tag 7 Class Name index 355
293: Tag 12 NameAndType Name index 356, Description index 188
294: Tag 1 Utf8 Value "javax/management/AttributeChangeNotification"
295: Tag 12 NameAndType Name index 189, Description index 188
296: Tag 1 Utf8 Value "State"
297: Tag 1 Utf8 Value "java.lang.Integer"
298: Tag 1 Utf8 Value "java/lang/Integer"
299: Tag 12 NameAndType Name index 123, Description index 357
300: Tag 12 NameAndType Name index 123, Description index 358
301: Tag 12 NameAndType Name index 359, Description index 317
302: Tag 12 NameAndType Name index 360, Description index 361
303: Tag 1 Utf8 Value "org/jboss/system/ServiceMBeanSupport"
304: Tag 1 Utf8 Value "javax/management/NotificationBroadcasterSupport"
305: Tag 1 Utf8 Value "javax/management/MBeanRegistration"
306: Tag 1 Utf8 Value "java/lang/String"
307: Tag 1 Utf8 Value "javax/management/MalformedObjectNameException"
308: Tag 1 Utf8 Value "(J)V"
309: Tag 1 Utf8 Value "java/lang/Object"
310: Tag 1 Utf8 Value "getClass"
311: Tag 1 Utf8 Value "()Ljava/lang/Class;"
312: Tag 1 Utf8 Value "java/lang/Class"
313: Tag 1 Utf8 Value "org/jboss/logging/Logger"
314: Tag 1 Utf8 Value "getLogger"
315: Tag 1 Utf8 Value "(Ljava/lang/String;)Lorg/jboss/logging/Logger;"
316: Tag 1 Utf8 Value "trace"
317: Tag 1 Utf8 Value "(Ljava/lang/Object;)V"
318: Tag 1 Utf8 Value "lastIndexOf"
319: Tag 1 Utf8 Value "(Ljava/lang/String;)I"
320: Tag 1 Utf8 Value "length"
321: Tag 1 Utf8 Value "substring"
322: Tag 1 Utf8 Value "(II)Ljava/lang/String;"
323: Tag 1 Utf8 Value "states"
324: Tag 1 Utf8 Value "[Ljava/lang/String;"
325: Tag 1 Utf8 Value "org/jboss/system/logging/ServiceMBeanLogger"
326: Tag 1 Utf8 Value "ROOT_LOGGER"
327: Tag 1 Utf8 Value "Lorg/jboss/system/logging/ServiceMBeanLogger;"
328: Tag 1 Utf8 Value "errorInStop"
329: Tag 1 Utf8 Value "(Ljava/lang/String;)Ljava/lang/String;"
330: Tag 1 Utf8 Value "warn"
331: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/lang/Throwable;)V"
332: Tag 1 Utf8 Value "errorInDestroy"
333: Tag 1 Utf8 Value "javax/management/ObjectName"
334: Tag 1 Utf8 Value "toString"
335: Tag 1 Utf8 Value "nullMethodName"
336: Tag 1 Utf8 Value "()Ljava/lang/IllegalArgumentException;"
337: Tag 1 Utf8 Value "equals"
338: Tag 1 Utf8 Value "(Ljava/lang/Object;)Z"
339: Tag 1 Utf8 Value "unknownLifecycleMethod"
340: Tag 1 Utf8 Value "(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;"
341: Tag 1 Utf8 Value "isDebugEnabled"
342: Tag 1 Utf8 Value "()Z"
343: Tag 1 Utf8 Value "append"
344: Tag 1 Utf8 Value "(Ljava/lang/String;)Ljava/lang/StringBuilder;"
345: Tag 1 Utf8 Value "debug"
346: Tag 1 Utf8 Value "initializationFailed"
347: Tag 1 Utf8 Value "startingFailed"
348: Tag 1 Utf8 Value "stoppingFailed"
349: Tag 1 Utf8 Value "destroyingFailed"
350: Tag 1 Utf8 Value "java/lang/Boolean"
351: Tag 1 Utf8 Value "booleanValue"
352: Tag 1 Utf8 Value "postRegisterInitializationFailed"
353: Tag 1 Utf8 Value "error"
354: Tag 1 Utf8 Value "incrementAndGet"
355: Tag 1 Utf8 Value "java/lang/System"
356: Tag 1 Utf8 Value "currentTimeMillis"
357: Tag 1 Utf8 Value "(I)V"
358: Tag 1 Utf8 Value "(Ljava/lang/Object;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
359: Tag 1 Utf8 Value "setUserData"
360: Tag 1 Utf8 Value "sendNotification"
361: Tag 1 Utf8 Value "(Ljavax/management/Notification;)V"

Flags: decimal 33, hex 0021, binary 0000000000100001 public super

This class: id 104, name org.jboss.system.ServiceMBeanSupport

Super class: id 105, name javax.management.NotificationBroadcasterSupport

Implements class ids 2 106
Implements names org.jboss.system.ServiceMBean javax.management.MBeanRegistration

Field name log (index 107), type Lorg/jboss/logging/Logger; (descriptor index 108)
Human type: org.jboss.logging.Logger
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
No field attributes
Field name server (index 109), type Ljavax/management/MBeanServer; (descriptor index 110)
Human type: javax.management.MBeanServer
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
No field attributes
Field name serviceName (index 111), type Ljavax/management/ObjectName; (descriptor index 112)
Human type: javax.management.ObjectName
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
No field attributes
Field name state (index 113), type I (descriptor index 114)
Human type: int
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name sequenceNumber (index 115), type Ljava/util/concurrent/atomic/AtomicLong; (descriptor index 116)
Human type: java.util.concurrent.atomic.AtomicLong
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name createIgnored (index 117), type Z (descriptor index 118)
Human type: boolean
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name startIgnored (index 119), type Z (descriptor index 118)
Human type: boolean
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name stopIgnored (index 120), type Z (descriptor index 118)
Human type: boolean
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name destroyIgnored (index 121), type Z (descriptor index 118)
Human type: boolean
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name unregisterIgnored (index 122), type Z (descriptor index 118)
Human type: boolean
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes

Method name <init> (index 123), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 153
Method name <init> (index 123), type (Ljava/lang/Class;)V (descriptor index 130)
Human type: (java.lang.Class): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 83
Method attribute name Signature, size 2
Method name <init> (index 123), type (Ljava/lang/String;)V (descriptor index 137)
Human type: (java.lang.String): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 65
Method name <init> (index 123), type (Lorg/jboss/logging/Logger;)V (descriptor index 140)
Human type: (org.jboss.logging.Logger): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 151
Method name getName (index 141), type ()Ljava/lang/String; (descriptor index 142)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 125
Method name getServiceName (index 147), type ()Ljavax/management/ObjectName; (descriptor index 148)
Human type: (): javax.management.ObjectName
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getServer (index 149), type ()Ljavax/management/MBeanServer; (descriptor index 150)
Human type: (): javax.management.MBeanServer
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getState (index 151), type ()I (descriptor index 152)
Human type: (): int
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getStateString (index 153), type ()Ljava/lang/String; (descriptor index 142)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 51
Method name getLog (index 154), type ()Lorg/jboss/logging/Logger; (descriptor index 155)
Human type: (): org.jboss.logging.Logger
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name create (index 156), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 51
Method attribute name Exceptions, size 4
Method name start (index 158), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 51
Method attribute name Exceptions, size 4
Method name stop (index 159), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 118
Method name destroy (index 162), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 118
Method name jbossInternalDescription (index 163), type ()Ljava/lang/String; (descriptor index 142)
Human type: (): java.lang.String
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 79
Method name jbossInternalLifecycle (index 164), type (Ljava/lang/String;)V (descriptor index 137)
Human type: (java.lang.String): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 198
Method attribute name Exceptions, size 4
Method name jbossInternalCreate (index 166), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 335
Method attribute name Exceptions, size 4
Method name jbossInternalStart (index 169), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 462
Method attribute name Exceptions, size 4
Method name jbossInternalStop (index 170), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 453
Method name jbossInternalDestroy (index 171), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 326
Method name preRegister (index 172), type (Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName; (descriptor index 173)
Human type: (javax.management.MBeanServer, javax.management.ObjectName): javax.management.ObjectName
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 90
Method attribute name Exceptions, size 4
Method name postRegister (index 175), type (Ljava/lang/Boolean;)V (descriptor index 176)
Human type: (java.lang.Boolean): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 181
Method name preDeregister (index 179), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 43
Method attribute name Exceptions, size 4
Method name postDeregister (index 180), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 163
Method name getObjectName (index 181), type (Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName; (descriptor index 173)
Human type: (javax.management.MBeanServer, javax.management.ObjectName): javax.management.ObjectName
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 64
Method attribute name Exceptions, size 4
Method name createService (index 183), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 43
Method attribute name Exceptions, size 4
Method name startService (index 184), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 43
Method attribute name Exceptions, size 4
Method name stopService (index 185), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 43
Method attribute name Exceptions, size 4
Method name destroyService (index 186), type ()V (descriptor index 124)
Human type: (): void
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 43
Method attribute name Exceptions, size 4
Method name nextNotificationSequenceNumber (index 187), type ()J (descriptor index 188)
Human type: (): long
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 50
Method name getNextNotificationSequenceNumber (index 189), type ()J (descriptor index 188)
Human type: (): long
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 47
Method name sendStateChangeNotification (index 190), type (IILjava/lang/String;Ljava/lang/Throwable;)V (descriptor index 191)
Human type: (int, int, java.lang.String, java.lang.Throwable): void
Flags: decimal 2, hex 0002, binary 0000000000000010 private
Method attribute name Code, size 178

Class attribute name SourceFile, size 2
