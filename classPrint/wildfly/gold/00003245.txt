AAAA 2
Version 52.0

Constant Pool size 154
1: Tag 10 MethodRef Class index 31, Name and type index 80
2: Tag 9 FieldRef Class index 81, Name and type index 82
3: Tag 10 MethodRef Class index 81, Name and type index 83
4: Tag 9 FieldRef Class index 84, Name and type index 85
5: Tag 10 MethodRef Class index 84, Name and type index 86
6: Tag 9 FieldRef Class index 87, Name and type index 88
7: Tag 10 MethodRef Class index 87, Name and type index 89
8: Tag 11 InterfaceMethodRef Class index 90, Name and type index 91
9: Tag 11 InterfaceMethodRef Class index 90, Name and type index 92
10: Tag 10 MethodRef Class index 93, Name and type index 94
11: Tag 7 Class Name index 95
12: Tag 9 FieldRef Class index 11, Name and type index 96
13: Tag 10 MethodRef Class index 81, Name and type index 97
14: Tag 9 FieldRef Class index 11, Name and type index 98
15: Tag 10 MethodRef Class index 84, Name and type index 99
16: Tag 10 MethodRef Class index 87, Name and type index 100
17: Tag 10 MethodRef Class index 87, Name and type index 101
18: Tag 11 InterfaceMethodRef Class index 90, Name and type index 102
19: Tag 10 MethodRef Class index 26, Name and type index 103
20: Tag 10 MethodRef Class index 26, Name and type index 104
21: Tag 10 MethodRef Class index 81, Name and type index 105
22: Tag 10 MethodRef Class index 26, Name and type index 106
23: Tag 10 MethodRef Class index 84, Name and type index 107
24: Tag 10 MethodRef Class index 26, Name and type index 108
25: Tag 10 MethodRef Class index 87, Name and type index 109
26: Tag 7 Class Name index 110
27: Tag 10 MethodRef Class index 11, Name and type index 111
28: Tag 10 MethodRef Class index 11, Name and type index 112
29: Tag 10 MethodRef Class index 81, Name and type index 100
30: Tag 10 MethodRef Class index 84, Name and type index 100
31: Tag 7 Class Name index 113
32: Tag 7 Class Name index 114
33: Tag 1 Utf8 Value "DATE_INDEX"
34: Tag 1 Utf8 Value "I"
35: Tag 1 Utf8 Value "ConstantValue"
36: Tag 3 Integer Value 1, hex: 0x1
37: Tag 1 Utf8 Value "TIME_INDEX"
38: Tag 1 Utf8 Value "OFFSET_INDEX"
39: Tag 1 Utf8 Value "<init>"
40: Tag 1 Utf8 Value "()V"
41: Tag 1 Utf8 Value "Code"
42: Tag 1 Utf8 Value "LineNumberTable"
43: Tag 1 Utf8 Value "LocalVariableTable"
44: Tag 1 Utf8 Value "this"
45: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/time/OffsetDateTimeMarshaller;"
46: Tag 1 Utf8 Value "readFrom"
47: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;)Ljava/time/OffsetDateTime;"
48: Tag 1 Utf8 Value "tag"
49: Tag 1 Utf8 Value "index"
50: Tag 1 Utf8 Value "reader"
51: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;"
52: Tag 1 Utf8 Value "date"
53: Tag 1 Utf8 Value "Ljava/time/LocalDate;"
54: Tag 1 Utf8 Value "time"
55: Tag 1 Utf8 Value "Ljava/time/LocalTime;"
56: Tag 1 Utf8 Value "offset"
57: Tag 1 Utf8 Value "Ljava/time/ZoneOffset;"
58: Tag 1 Utf8 Value "StackMapTable"
59: Tag 7 Class Name index 115
60: Tag 7 Class Name index 116
61: Tag 7 Class Name index 117
62: Tag 1 Utf8 Value "Exceptions"
63: Tag 7 Class Name index 118
64: Tag 1 Utf8 Value "writeTo"
65: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;Ljava/time/OffsetDateTime;)V"
66: Tag 1 Utf8 Value "writer"
67: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;"
68: Tag 1 Utf8 Value "value"
69: Tag 1 Utf8 Value "Ljava/time/OffsetDateTime;"
70: Tag 1 Utf8 Value "getJavaClass"
71: Tag 1 Utf8 Value "()Ljava/lang/Class;"
72: Tag 1 Utf8 Value "Signature"
73: Tag 1 Utf8 Value "()Ljava/lang/Class<+Ljava/time/OffsetDateTime;>;"
74: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;Ljava/lang/Object;)V"
75: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;)Ljava/lang/Object;"
76: Tag 1 Utf8 Value "<clinit>"
77: Tag 1 Utf8 Value "Ljava/lang/Object;Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamMarshaller<Ljava/time/OffsetDateTime;>;"
78: Tag 1 Utf8 Value "SourceFile"
79: Tag 1 Utf8 Value "OffsetDateTimeMarshaller.java"
80: Tag 12 NameAndType Name index 39, Description index 40
81: Tag 7 Class Name index 119
82: Tag 12 NameAndType Name index 120, Description index 121
83: Tag 12 NameAndType Name index 122, Description index 123
84: Tag 7 Class Name index 124
85: Tag 12 NameAndType Name index 120, Description index 125
86: Tag 12 NameAndType Name index 122, Description index 126
87: Tag 7 Class Name index 127
88: Tag 12 NameAndType Name index 120, Description index 128
89: Tag 12 NameAndType Name index 122, Description index 129
90: Tag 7 Class Name index 130
91: Tag 12 NameAndType Name index 131, Description index 132
92: Tag 12 NameAndType Name index 133, Description index 134
93: Tag 7 Class Name index 135
94: Tag 12 NameAndType Name index 136, Description index 137
95: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/time/OffsetDateTimeMarshaller"
96: Tag 12 NameAndType Name index 37, Description index 34
97: Tag 12 NameAndType Name index 138, Description index 139
98: Tag 12 NameAndType Name index 38, Description index 34
99: Tag 12 NameAndType Name index 138, Description index 140
100: Tag 12 NameAndType Name index 141, Description index 134
101: Tag 12 NameAndType Name index 138, Description index 142
102: Tag 12 NameAndType Name index 143, Description index 144
103: Tag 12 NameAndType Name index 145, Description index 146
104: Tag 12 NameAndType Name index 147, Description index 123
105: Tag 12 NameAndType Name index 148, Description index 149
106: Tag 12 NameAndType Name index 150, Description index 126
107: Tag 12 NameAndType Name index 148, Description index 151
108: Tag 12 NameAndType Name index 152, Description index 129
109: Tag 12 NameAndType Name index 148, Description index 153
110: Tag 1 Utf8 Value "java/time/OffsetDateTime"
111: Tag 12 NameAndType Name index 64, Description index 65
112: Tag 12 NameAndType Name index 46, Description index 47
113: Tag 1 Utf8 Value "java/lang/Object"
114: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/ProtoStreamMarshaller"
115: Tag 1 Utf8 Value "java/time/LocalDate"
116: Tag 1 Utf8 Value "java/time/LocalTime"
117: Tag 1 Utf8 Value "java/time/ZoneOffset"
118: Tag 1 Utf8 Value "java/io/IOException"
119: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/time/LocalDateMarshaller"
120: Tag 1 Utf8 Value "INSTANCE"
121: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/time/LocalDateMarshaller;"
122: Tag 1 Utf8 Value "getBuilder"
123: Tag 1 Utf8 Value "()Ljava/time/LocalDate;"
124: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/time/LocalTimeMarshaller"
125: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/time/LocalTimeMarshaller;"
126: Tag 1 Utf8 Value "()Ljava/time/LocalTime;"
127: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/time/ZoneOffsetMarshaller"
128: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/protostream/time/ZoneOffsetMarshaller;"
129: Tag 1 Utf8 Value "()Ljava/time/ZoneOffset;"
130: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/protostream/ProtoStreamReader"
131: Tag 1 Utf8 Value "isAtEnd"
132: Tag 1 Utf8 Value "()Z"
133: Tag 1 Utf8 Value "readTag"
134: Tag 1 Utf8 Value "()I"
135: Tag 1 Utf8 Value "org/infinispan/protostream/descriptors/WireType"
136: Tag 1 Utf8 Value "getTagFieldNumber"
137: Tag 1 Utf8 Value "(I)I"
138: Tag 1 Utf8 Value "readField"
139: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;ILjava/time/LocalDate;)Ljava/time/LocalDate;"
140: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;ILjava/time/LocalTime;)Ljava/time/LocalTime;"
141: Tag 1 Utf8 Value "getFields"
142: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;ILjava/time/ZoneOffset;)Ljava/time/ZoneOffset;"
143: Tag 1 Utf8 Value "skipField"
144: Tag 1 Utf8 Value "(I)Z"
145: Tag 1 Utf8 Value "of"
146: Tag 1 Utf8 Value "(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime;"
147: Tag 1 Utf8 Value "toLocalDate"
148: Tag 1 Utf8 Value "writeFields"
149: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;ILjava/time/LocalDate;)V"
150: Tag 1 Utf8 Value "toLocalTime"
151: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;ILjava/time/LocalTime;)V"
152: Tag 1 Utf8 Value "getOffset"
153: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;ILjava/time/ZoneOffset;)V"

Flags: decimal 33, hex 0021, binary 0000000000100001 public super

This class: id 11, name org.wildfly.clustering.marshalling.protostream.time.OffsetDateTimeMarshaller

Super class: id 31, name java.lang.Object

Implements class ids 32
Implements names org.wildfly.clustering.marshalling.protostream.ProtoStreamMarshaller

Field name DATE_INDEX (index 33), type I (descriptor index 34)
Human type: int
Flags: decimal 26, hex 001a, binary 0000000000011010 private static final
Field attribute name ConstantValue, size 2
Field name TIME_INDEX (index 37), type I (descriptor index 34)
Human type: int
Flags: decimal 26, hex 001a, binary 0000000000011010 private static final
No field attributes
Field name OFFSET_INDEX (index 38), type I (descriptor index 34)
Human type: int
Flags: decimal 26, hex 001a, binary 0000000000011010 private static final
No field attributes

Method name <init> (index 39), type ()V (descriptor index 40)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name readFrom (index 46), type (Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;)Ljava/time/OffsetDateTime; (descriptor index 47)
Human type: (org.wildfly.clustering.marshalling.protostream.ProtoStreamReader): java.time.OffsetDateTime
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 362
Method attribute name Exceptions, size 4
Method name writeTo (index 64), type (Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;Ljava/time/OffsetDateTime;)V (descriptor index 65)
Human type: (org.wildfly.clustering.marshalling.protostream.ProtoStreamWriter, java.time.OffsetDateTime): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 115
Method attribute name Exceptions, size 4
Method name getJavaClass (index 70), type ()Ljava/lang/Class; (descriptor index 71)
Human type: (): java.lang.Class
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 45
Method attribute name Signature, size 2
Method name writeTo (index 64), type (Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamWriter;Ljava/lang/Object;)V (descriptor index 74)
Human type: (org.wildfly.clustering.marshalling.protostream.ProtoStreamWriter, java.lang.Object): void
Flags: decimal 4161, hex 1041, binary 0001000001000001 public bridge synthetic
Method attribute name Code, size 52
Method attribute name Exceptions, size 4
Method name readFrom (index 46), type (Lorg/wildfly/clustering/marshalling/protostream/ProtoStreamReader;)Ljava/lang/Object; (descriptor index 75)
Human type: (org.wildfly.clustering.marshalling.protostream.ProtoStreamReader): java.lang.Object
Flags: decimal 4161, hex 1041, binary 0001000001000001 public bridge synthetic
Method attribute name Code, size 48
Method attribute name Exceptions, size 4
Method name <clinit> (index 76), type ()V (descriptor index 40)
Human type: (): void
Flags: decimal 8, hex 0008, binary 0000000000001000 static
Method attribute name Code, size 53

Class attribute name Signature, size 2
Class attribute name SourceFile, size 2
