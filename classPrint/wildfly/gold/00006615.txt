AAAA 2
Version 52.0

Constant Pool size 199
1: Tag 10 MethodRef Class index 39, Name and type index 114
2: Tag 10 MethodRef Class index 74, Name and type index 115
3: Tag 10 MethodRef Class index 116, Name and type index 117
4: Tag 9 FieldRef Class index 38, Name and type index 118
5: Tag 10 MethodRef Class index 74, Name and type index 119
6: Tag 9 FieldRef Class index 38, Name and type index 120
7: Tag 10 MethodRef Class index 74, Name and type index 121
8: Tag 10 MethodRef Class index 122, Name and type index 123
9: Tag 9 FieldRef Class index 38, Name and type index 124
10: Tag 10 MethodRef Class index 74, Name and type index 125
11: Tag 9 FieldRef Class index 38, Name and type index 126
12: Tag 7 Class Name index 127
13: Tag 10 MethodRef Class index 12, Name and type index 114
14: Tag 10 MethodRef Class index 74, Name and type index 128
15: Tag 11 InterfaceMethodRef Class index 129, Name and type index 130
16: Tag 11 InterfaceMethodRef Class index 75, Name and type index 131
17: Tag 11 InterfaceMethodRef Class index 75, Name and type index 132
18: Tag 7 Class Name index 133
19: Tag 10 MethodRef Class index 38, Name and type index 134
20: Tag 10 MethodRef Class index 74, Name and type index 135
21: Tag 10 MethodRef Class index 12, Name and type index 136
22: Tag 10 MethodRef Class index 74, Name and type index 137
23: Tag 9 FieldRef Class index 38, Name and type index 138
24: Tag 9 FieldRef Class index 38, Name and type index 139
25: Tag 10 MethodRef Class index 74, Name and type index 140
26: Tag 9 FieldRef Class index 38, Name and type index 141
27: Tag 10 MethodRef Class index 18, Name and type index 142
28: Tag 10 MethodRef Class index 143, Name and type index 144
29: Tag 10 MethodRef Class index 143, Name and type index 145
30: Tag 10 MethodRef Class index 116, Name and type index 146
31: Tag 10 MethodRef Class index 38, Name and type index 147
32: Tag 9 FieldRef Class index 38, Name and type index 148
33: Tag 7 Class Name index 149
34: Tag 10 MethodRef Class index 33, Name and type index 150
35: Tag 9 FieldRef Class index 151, Name and type index 152
36: Tag 11 InterfaceMethodRef Class index 151, Name and type index 153
37: Tag 10 MethodRef Class index 38, Name and type index 154
38: Tag 7 Class Name index 155
39: Tag 7 Class Name index 156
40: Tag 7 Class Name index 157
41: Tag 1 Utf8 Value "serviceName"
42: Tag 1 Utf8 Value "Lorg/jboss/msc/service/ServiceName;"
43: Tag 1 Utf8 Value "componentName"
44: Tag 1 Utf8 Value "Ljava/lang/String;"
45: Tag 1 Utf8 Value "componentClass"
46: Tag 1 Utf8 Value "Ljava/lang/Class;"
47: Tag 1 Utf8 Value "Signature"
48: Tag 1 Utf8 Value "Ljava/lang/Class<*>;"
49: Tag 1 Utf8 Value "postConstruct"
50: Tag 1 Utf8 Value "Lorg/jboss/invocation/InterceptorFactory;"
51: Tag 1 Utf8 Value "preDestroy"
52: Tag 1 Utf8 Value "componentInterceptors"
53: Tag 1 Utf8 Value "Ljava/util/Map;"
54: Tag 1 Utf8 Value "Ljava/util/Map<Ljava/lang/reflect/Method;Lorg/jboss/invocation/InterceptorFactory;>;"
55: Tag 1 Utf8 Value "namespaceContextSelector"
56: Tag 1 Utf8 Value "Lorg/jboss/as/naming/context/NamespaceContextSelector;"
57: Tag 1 Utf8 Value "component"
58: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/BasicComponent;"
59: Tag 1 Utf8 Value "<init>"
60: Tag 1 Utf8 Value "(Lorg/jboss/as/ee/component/ComponentConfiguration;)V"
61: Tag 1 Utf8 Value "Code"
62: Tag 1 Utf8 Value "LineNumberTable"
63: Tag 1 Utf8 Value "LocalVariableTable"
64: Tag 1 Utf8 Value "method"
65: Tag 1 Utf8 Value "Ljava/lang/reflect/Method;"
66: Tag 1 Utf8 Value "this"
67: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/BasicComponentCreateService;"
68: Tag 1 Utf8 Value "componentConfiguration"
69: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/ComponentConfiguration;"
70: Tag 1 Utf8 Value "Ljava/util/IdentityHashMap;"
71: Tag 1 Utf8 Value "LocalVariableTypeTable"
72: Tag 1 Utf8 Value "Ljava/util/IdentityHashMap<Ljava/lang/reflect/Method;Lorg/jboss/invocation/InterceptorFactory;>;"
73: Tag 1 Utf8 Value "StackMapTable"
74: Tag 7 Class Name index 158
75: Tag 7 Class Name index 159
76: Tag 1 Utf8 Value "requiresInterceptors"
77: Tag 1 Utf8 Value "(Ljava/lang/reflect/Method;Lorg/jboss/as/ee/component/ComponentConfiguration;)Z"
78: Tag 1 Utf8 Value "start"
79: Tag 1 Utf8 Value "(Lorg/jboss/msc/service/StartContext;)V"
80: Tag 1 Utf8 Value "context"
81: Tag 1 Utf8 Value "Lorg/jboss/msc/service/StartContext;"
82: Tag 1 Utf8 Value "Exceptions"
83: Tag 7 Class Name index 160
84: Tag 1 Utf8 Value "createComponent"
85: Tag 1 Utf8 Value "()Lorg/jboss/as/ee/component/BasicComponent;"
86: Tag 1 Utf8 Value "stop"
87: Tag 1 Utf8 Value "(Lorg/jboss/msc/service/StopContext;)V"
88: Tag 1 Utf8 Value "Lorg/jboss/msc/service/StopContext;"
89: Tag 1 Utf8 Value "getValue"
90: Tag 1 Utf8 Value "()Lorg/jboss/as/ee/component/Component;"
91: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/Component;"
92: Tag 7 Class Name index 161
93: Tag 7 Class Name index 162
94: Tag 7 Class Name index 163
95: Tag 1 Utf8 Value "getComponentName"
96: Tag 1 Utf8 Value "()Ljava/lang/String;"
97: Tag 1 Utf8 Value "getPostConstruct"
98: Tag 1 Utf8 Value "()Lorg/jboss/invocation/InterceptorFactory;"
99: Tag 1 Utf8 Value "getPreDestroy"
100: Tag 1 Utf8 Value "getComponentInterceptors"
101: Tag 1 Utf8 Value "()Ljava/util/Map;"
102: Tag 1 Utf8 Value "()Ljava/util/Map<Ljava/lang/reflect/Method;Lorg/jboss/invocation/InterceptorFactory;>;"
103: Tag 1 Utf8 Value "getComponentClass"
104: Tag 1 Utf8 Value "()Ljava/lang/Class;"
105: Tag 1 Utf8 Value "()Ljava/lang/Class<*>;"
106: Tag 1 Utf8 Value "getNamespaceContextSelector"
107: Tag 1 Utf8 Value "()Lorg/jboss/as/naming/context/NamespaceContextSelector;"
108: Tag 1 Utf8 Value "getServiceName"
109: Tag 1 Utf8 Value "()Lorg/jboss/msc/service/ServiceName;"
110: Tag 1 Utf8 Value "()Ljava/lang/Object;"
111: Tag 1 Utf8 Value "Ljava/lang/Object;Lorg/jboss/msc/service/Service<Lorg/jboss/as/ee/component/Component;>;"
112: Tag 1 Utf8 Value "SourceFile"
113: Tag 1 Utf8 Value "BasicComponentCreateService.java"
114: Tag 12 NameAndType Name index 59, Description index 164
115: Tag 12 NameAndType Name index 165, Description index 166
116: Tag 7 Class Name index 167
117: Tag 12 NameAndType Name index 168, Description index 109
118: Tag 12 NameAndType Name index 41, Description index 42
119: Tag 12 NameAndType Name index 95, Description index 96
120: Tag 12 NameAndType Name index 43, Description index 44
121: Tag 12 NameAndType Name index 169, Description index 170
122: Tag 7 Class Name index 171
123: Tag 12 NameAndType Name index 172, Description index 173
124: Tag 12 NameAndType Name index 49, Description index 50
125: Tag 12 NameAndType Name index 174, Description index 170
126: Tag 12 NameAndType Name index 51, Description index 50
127: Tag 1 Utf8 Value "java/util/IdentityHashMap"
128: Tag 12 NameAndType Name index 175, Description index 176
129: Tag 7 Class Name index 177
130: Tag 12 NameAndType Name index 178, Description index 179
131: Tag 12 NameAndType Name index 180, Description index 181
132: Tag 12 NameAndType Name index 182, Description index 110
133: Tag 1 Utf8 Value "java/lang/reflect/Method"
134: Tag 12 NameAndType Name index 76, Description index 77
135: Tag 12 NameAndType Name index 100, Description index 183
136: Tag 12 NameAndType Name index 184, Description index 185
137: Tag 12 NameAndType Name index 103, Description index 104
138: Tag 12 NameAndType Name index 45, Description index 46
139: Tag 12 NameAndType Name index 52, Description index 53
140: Tag 12 NameAndType Name index 106, Description index 107
141: Tag 12 NameAndType Name index 55, Description index 56
142: Tag 12 NameAndType Name index 186, Description index 187
143: Tag 7 Class Name index 188
144: Tag 12 NameAndType Name index 189, Description index 190
145: Tag 12 NameAndType Name index 191, Description index 190
146: Tag 12 NameAndType Name index 192, Description index 181
147: Tag 12 NameAndType Name index 84, Description index 85
148: Tag 12 NameAndType Name index 57, Description index 58
149: Tag 1 Utf8 Value "org/jboss/as/ee/component/BasicComponent"
150: Tag 12 NameAndType Name index 59, Description index 193
151: Tag 7 Class Name index 194
152: Tag 12 NameAndType Name index 195, Description index 196
153: Tag 12 NameAndType Name index 197, Description index 198
154: Tag 12 NameAndType Name index 89, Description index 90
155: Tag 1 Utf8 Value "org/jboss/as/ee/component/BasicComponentCreateService"
156: Tag 1 Utf8 Value "java/lang/Object"
157: Tag 1 Utf8 Value "org/jboss/msc/service/Service"
158: Tag 1 Utf8 Value "org/jboss/as/ee/component/ComponentConfiguration"
159: Tag 1 Utf8 Value "java/util/Iterator"
160: Tag 1 Utf8 Value "org/jboss/msc/service/StartException"
161: Tag 1 Utf8 Value "org/jboss/as/ee/component/Component"
162: Tag 1 Utf8 Value "java/lang/IllegalStateException"
163: Tag 1 Utf8 Value "java/lang/IllegalArgumentException"
164: Tag 1 Utf8 Value "()V"
165: Tag 1 Utf8 Value "getComponentDescription"
166: Tag 1 Utf8 Value "()Lorg/jboss/as/ee/component/ComponentDescription;"
167: Tag 1 Utf8 Value "org/jboss/as/ee/component/ComponentDescription"
168: Tag 1 Utf8 Value "getCreateServiceName"
169: Tag 1 Utf8 Value "getPostConstructInterceptors"
170: Tag 1 Utf8 Value "()Ljava/util/List;"
171: Tag 1 Utf8 Value "org/jboss/invocation/Interceptors"
172: Tag 1 Utf8 Value "getChainedInterceptorFactory"
173: Tag 1 Utf8 Value "(Ljava/util/Collection;)Lorg/jboss/invocation/InterceptorFactory;"
174: Tag 1 Utf8 Value "getPreDestroyInterceptors"
175: Tag 1 Utf8 Value "getDefinedComponentMethods"
176: Tag 1 Utf8 Value "()Ljava/util/Set;"
177: Tag 1 Utf8 Value "java/util/Set"
178: Tag 1 Utf8 Value "iterator"
179: Tag 1 Utf8 Value "()Ljava/util/Iterator;"
180: Tag 1 Utf8 Value "hasNext"
181: Tag 1 Utf8 Value "()Z"
182: Tag 1 Utf8 Value "next"
183: Tag 1 Utf8 Value "(Ljava/lang/reflect/Method;)Ljava/util/List;"
184: Tag 1 Utf8 Value "put"
185: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
186: Tag 1 Utf8 Value "getModifiers"
187: Tag 1 Utf8 Value "()I"
188: Tag 1 Utf8 Value "java/lang/reflect/Modifier"
189: Tag 1 Utf8 Value "isPublic"
190: Tag 1 Utf8 Value "(I)Z"
191: Tag 1 Utf8 Value "isFinal"
192: Tag 1 Utf8 Value "isIntercepted"
193: Tag 1 Utf8 Value "(Lorg/jboss/as/ee/component/BasicComponentCreateService;)V"
194: Tag 1 Utf8 Value "org/jboss/as/ee/logging/EeLogger"
195: Tag 1 Utf8 Value "ROOT_LOGGER"
196: Tag 1 Utf8 Value "Lorg/jboss/as/ee/logging/EeLogger;"
197: Tag 1 Utf8 Value "serviceNotStarted"
198: Tag 1 Utf8 Value "()Ljava/lang/IllegalStateException;"

Flags: decimal 33, hex 0021, binary 0000000000100001 public super

This class: id 38, name org.jboss.as.ee.component.BasicComponentCreateService

Super class: id 39, name java.lang.Object

Implements class ids 40
Implements names org.jboss.msc.service.Service

Field name serviceName (index 41), type Lorg/jboss/msc/service/ServiceName; (descriptor index 42)
Human type: org.jboss.msc.service.ServiceName
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name componentName (index 43), type Ljava/lang/String; (descriptor index 44)
Human type: java.lang.String
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name componentClass (index 45), type Ljava/lang/Class; (descriptor index 46)
Human type: java.lang.Class
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
Field attribute name Signature, size 2
Field name postConstruct (index 49), type Lorg/jboss/invocation/InterceptorFactory; (descriptor index 50)
Human type: org.jboss.invocation.InterceptorFactory
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name preDestroy (index 51), type Lorg/jboss/invocation/InterceptorFactory; (descriptor index 50)
Human type: org.jboss.invocation.InterceptorFactory
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name componentInterceptors (index 52), type Ljava/util/Map; (descriptor index 53)
Human type: java.util.Map
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
Field attribute name Signature, size 2
Field name namespaceContextSelector (index 55), type Lorg/jboss/as/naming/context/NamespaceContextSelector; (descriptor index 56)
Human type: org.jboss.as.naming.context.NamespaceContextSelector
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name component (index 57), type Lorg/jboss/as/ee/component/BasicComponent; (descriptor index 58)
Human type: org.jboss.as.ee.component.BasicComponent
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes

Method name <init> (index 59), type (Lorg/jboss/as/ee/component/ComponentConfiguration;)V (descriptor index 60)
Human type: (org.jboss.as.ee.component.ComponentConfiguration): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 307
Method name requiresInterceptors (index 76), type (Ljava/lang/reflect/Method;Lorg/jboss/as/ee/component/ComponentConfiguration;)Z (descriptor index 77)
Human type: (java.lang.reflect.Method, org.jboss.as.ee.component.ComponentConfiguration): boolean
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 109
Method name start (index 78), type (Lorg/jboss/msc/service/StartContext;)V (descriptor index 79)
Human type: (org.jboss.msc.service.StartContext): void
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 65
Method attribute name Exceptions, size 4
Method name createComponent (index 84), type ()Lorg/jboss/as/ee/component/BasicComponent; (descriptor index 85)
Human type: (): org.jboss.as.ee.component.BasicComponent
Flags: decimal 4, hex 0004, binary 0000000000000100 protected
Method attribute name Code, size 51
Method name stop (index 86), type (Lorg/jboss/msc/service/StopContext;)V (descriptor index 87)
Human type: (org.jboss.msc.service.StopContext): void
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 62
Method name getValue (index 89), type ()Lorg/jboss/as/ee/component/Component; (descriptor index 90)
Human type: (): org.jboss.as.ee.component.Component
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 98
Method attribute name Exceptions, size 6
Method name getComponentName (index 95), type ()Ljava/lang/String; (descriptor index 96)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getPostConstruct (index 97), type ()Lorg/jboss/invocation/InterceptorFactory; (descriptor index 98)
Human type: (): org.jboss.invocation.InterceptorFactory
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getPreDestroy (index 99), type ()Lorg/jboss/invocation/InterceptorFactory; (descriptor index 98)
Human type: (): org.jboss.invocation.InterceptorFactory
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getComponentInterceptors (index 100), type ()Ljava/util/Map; (descriptor index 101)
Human type: (): java.util.Map
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method attribute name Signature, size 2
Method name getComponentClass (index 103), type ()Ljava/lang/Class; (descriptor index 104)
Human type: (): java.lang.Class
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method attribute name Signature, size 2
Method name getNamespaceContextSelector (index 106), type ()Lorg/jboss/as/naming/context/NamespaceContextSelector; (descriptor index 107)
Human type: (): org.jboss.as.naming.context.NamespaceContextSelector
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getServiceName (index 108), type ()Lorg/jboss/msc/service/ServiceName; (descriptor index 109)
Human type: (): org.jboss.msc.service.ServiceName
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name getValue (index 89), type ()Ljava/lang/Object; (descriptor index 110)
Human type: (): java.lang.Object
Flags: decimal 4161, hex 1041, binary 0001000001000001 public bridge synthetic
Method attribute name Code, size 47
Method attribute name Exceptions, size 6

Class attribute name Signature, size 2
Class attribute name SourceFile, size 2
