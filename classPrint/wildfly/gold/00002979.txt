AAAA 3
Version 52.0

Constant Pool size 199
1: Tag 10 MethodRef Class index 2, Name and type index 3
2: Tag 7 Class Name index 4
3: Tag 12 NameAndType Name index 5, Description index 6
4: Tag 1 Utf8 Value "java/lang/Object"
5: Tag 1 Utf8 Value "<init>"
6: Tag 1 Utf8 Value "()V"
7: Tag 9 FieldRef Class index 8, Name and type index 9
8: Tag 7 Class Name index 10
9: Tag 12 NameAndType Name index 11, Description index 12
10: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/AbstractAtomicTestCase"
11: Tag 1 Utf8 Value "factory"
12: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTesterFactory;"
13: Tag 11 InterfaceMethodRef Class index 14, Name and type index 15
14: Tag 7 Class Name index 16
15: Tag 12 NameAndType Name index 17, Description index 18
16: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/MarshallingTesterFactory"
17: Tag 1 Utf8 Value "createTester"
18: Tag 1 Utf8 Value "()Lorg/wildfly/clustering/marshalling/MarshallingTester;"
19: Tag 7 Class Name index 20
20: Tag 1 Utf8 Value "java/util/concurrent/atomic/AtomicBoolean"
21: Tag 10 MethodRef Class index 19, Name and type index 22
22: Tag 12 NameAndType Name index 5, Description index 23
23: Tag 1 Utf8 Value "(Z)V"
24: Tag 18 InvokeDynamic Bootstrap index 0, NameAndType index 25
25: Tag 12 NameAndType Name index 26, Description index 27
26: Tag 1 Utf8 Value "accept"
27: Tag 1 Utf8 Value "()Ljava/util/function/BiConsumer;"
28: Tag 10 MethodRef Class index 29, Name and type index 30
29: Tag 7 Class Name index 31
30: Tag 12 NameAndType Name index 32, Description index 33
31: Tag 1 Utf8 Value "org/wildfly/clustering/marshalling/MarshallingTester"
32: Tag 1 Utf8 Value "test"
33: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/util/function/BiConsumer;)V"
34: Tag 18 InvokeDynamic Bootstrap index 1, NameAndType index 25
35: Tag 7 Class Name index 36
36: Tag 1 Utf8 Value "java/util/concurrent/atomic/AtomicInteger"
37: Tag 10 MethodRef Class index 35, Name and type index 3
38: Tag 18 InvokeDynamic Bootstrap index 2, NameAndType index 25
39: Tag 7 Class Name index 40
40: Tag 1 Utf8 Value "java/lang/Byte"
41: Tag 10 MethodRef Class index 35, Name and type index 42
42: Tag 12 NameAndType Name index 5, Description index 43
43: Tag 1 Utf8 Value "(I)V"
44: Tag 18 InvokeDynamic Bootstrap index 3, NameAndType index 25
45: Tag 7 Class Name index 46
46: Tag 1 Utf8 Value "java/lang/Integer"
47: Tag 3 Integer Value 2147483647, hex: 0x7fffffff
48: Tag 18 InvokeDynamic Bootstrap index 4, NameAndType index 25
49: Tag 7 Class Name index 50
50: Tag 1 Utf8 Value "java/util/concurrent/atomic/AtomicLong"
51: Tag 10 MethodRef Class index 49, Name and type index 3
52: Tag 18 InvokeDynamic Bootstrap index 5, NameAndType index 25
53: Tag 7 Class Name index 54
54: Tag 1 Utf8 Value "java/lang/Short"
55: Tag 5 Long Value 32767
57: Tag 10 MethodRef Class index 49, Name and type index 58
58: Tag 12 NameAndType Name index 5, Description index 59
59: Tag 1 Utf8 Value "(J)V"
60: Tag 18 InvokeDynamic Bootstrap index 6, NameAndType index 25
61: Tag 7 Class Name index 62
62: Tag 1 Utf8 Value "java/lang/Long"
63: Tag 5 Long Value 9223372036854775807
65: Tag 18 InvokeDynamic Bootstrap index 7, NameAndType index 25
66: Tag 7 Class Name index 67
67: Tag 1 Utf8 Value "java/util/concurrent/atomic/AtomicReference"
68: Tag 10 MethodRef Class index 66, Name and type index 3
69: Tag 18 InvokeDynamic Bootstrap index 8, NameAndType index 25
70: Tag 9 FieldRef Class index 71, Name and type index 72
71: Tag 7 Class Name index 73
72: Tag 12 NameAndType Name index 74, Description index 75
73: Tag 1 Utf8 Value "java/lang/Boolean"
74: Tag 1 Utf8 Value "TRUE"
75: Tag 1 Utf8 Value "Ljava/lang/Boolean;"
76: Tag 10 MethodRef Class index 66, Name and type index 77
77: Tag 12 NameAndType Name index 5, Description index 78
78: Tag 1 Utf8 Value "(Ljava/lang/Object;)V"
79: Tag 18 InvokeDynamic Bootstrap index 9, NameAndType index 25
80: Tag 10 MethodRef Class index 66, Name and type index 81
81: Tag 12 NameAndType Name index 82, Description index 83
82: Tag 1 Utf8 Value "get"
83: Tag 1 Utf8 Value "()Ljava/lang/Object;"
84: Tag 10 MethodRef Class index 85, Name and type index 86
85: Tag 7 Class Name index 87
86: Tag 12 NameAndType Name index 88, Description index 89
87: Tag 1 Utf8 Value "org/junit/Assert"
88: Tag 1 Utf8 Value "assertEquals"
89: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/lang/Object;)V"
90: Tag 10 MethodRef Class index 49, Name and type index 91
91: Tag 12 NameAndType Name index 82, Description index 92
92: Tag 1 Utf8 Value "()J"
93: Tag 10 MethodRef Class index 85, Name and type index 94
94: Tag 12 NameAndType Name index 88, Description index 95
95: Tag 1 Utf8 Value "(JJ)V"
96: Tag 10 MethodRef Class index 35, Name and type index 97
97: Tag 12 NameAndType Name index 82, Description index 98
98: Tag 1 Utf8 Value "()I"
99: Tag 10 MethodRef Class index 19, Name and type index 100
100: Tag 12 NameAndType Name index 82, Description index 101
101: Tag 1 Utf8 Value "()Z"
102: Tag 10 MethodRef Class index 71, Name and type index 103
103: Tag 12 NameAndType Name index 104, Description index 105
104: Tag 1 Utf8 Value "valueOf"
105: Tag 1 Utf8 Value "(Z)Ljava/lang/Boolean;"
106: Tag 1 Utf8 Value "(Lorg/wildfly/clustering/marshalling/MarshallingTesterFactory;)V"
107: Tag 1 Utf8 Value "Code"
108: Tag 1 Utf8 Value "LineNumberTable"
109: Tag 1 Utf8 Value "LocalVariableTable"
110: Tag 1 Utf8 Value "this"
111: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/AbstractAtomicTestCase;"
112: Tag 1 Utf8 Value "testAtomicBoolean"
113: Tag 1 Utf8 Value "tester"
114: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTester;"
115: Tag 1 Utf8 Value "LocalVariableTypeTable"
116: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTester<Ljava/util/concurrent/atomic/AtomicBoolean;>;"
117: Tag 1 Utf8 Value "Exceptions"
118: Tag 7 Class Name index 119
119: Tag 1 Utf8 Value "java/io/IOException"
120: Tag 1 Utf8 Value "RuntimeVisibleAnnotations"
121: Tag 1 Utf8 Value "Lorg/junit/Test;"
122: Tag 1 Utf8 Value "testAtomicInteger"
123: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTester<Ljava/util/concurrent/atomic/AtomicInteger;>;"
124: Tag 1 Utf8 Value "testAtomicLong"
125: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTester<Ljava/util/concurrent/atomic/AtomicLong;>;"
126: Tag 1 Utf8 Value "testAtomicReference"
127: Tag 1 Utf8 Value "Lorg/wildfly/clustering/marshalling/MarshallingTester<Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;>;"
128: Tag 1 Utf8 Value "lambda$testAtomicReference$9"
129: Tag 1 Utf8 Value "(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)V"
130: Tag 1 Utf8 Value "expected"
131: Tag 1 Utf8 Value "Ljava/util/concurrent/atomic/AtomicReference;"
132: Tag 1 Utf8 Value "actual"
133: Tag 1 Utf8 Value "lambda$testAtomicReference$8"
134: Tag 1 Utf8 Value "lambda$testAtomicLong$7"
135: Tag 1 Utf8 Value "(Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V"
136: Tag 1 Utf8 Value "Ljava/util/concurrent/atomic/AtomicLong;"
137: Tag 1 Utf8 Value "lambda$testAtomicLong$6"
138: Tag 1 Utf8 Value "lambda$testAtomicLong$5"
139: Tag 1 Utf8 Value "lambda$testAtomicInteger$4"
140: Tag 1 Utf8 Value "(Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;)V"
141: Tag 1 Utf8 Value "Ljava/util/concurrent/atomic/AtomicInteger;"
142: Tag 1 Utf8 Value "lambda$testAtomicInteger$3"
143: Tag 1 Utf8 Value "lambda$testAtomicInteger$2"
144: Tag 1 Utf8 Value "lambda$testAtomicBoolean$1"
145: Tag 1 Utf8 Value "(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;)V"
146: Tag 1 Utf8 Value "Ljava/util/concurrent/atomic/AtomicBoolean;"
147: Tag 1 Utf8 Value "lambda$testAtomicBoolean$0"
148: Tag 1 Utf8 Value "SourceFile"
149: Tag 1 Utf8 Value "AbstractAtomicTestCase.java"
150: Tag 1 Utf8 Value "BootstrapMethods"
151: Tag 15 MethodHandle Kind 6, Index 152
152: Tag 10 MethodRef Class index 153, Name and type index 154
153: Tag 7 Class Name index 155
154: Tag 12 NameAndType Name index 156, Description index 157
155: Tag 1 Utf8 Value "java/lang/invoke/LambdaMetafactory"
156: Tag 1 Utf8 Value "metafactory"
157: Tag 1 Utf8 Value "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
158: Tag 16 MethodType Descriptor index 89
159: Tag 15 MethodHandle Kind 6, Index 160
160: Tag 10 MethodRef Class index 8, Name and type index 161
161: Tag 12 NameAndType Name index 147, Description index 145
162: Tag 16 MethodType Descriptor index 145
163: Tag 15 MethodHandle Kind 6, Index 164
164: Tag 10 MethodRef Class index 8, Name and type index 165
165: Tag 12 NameAndType Name index 144, Description index 145
166: Tag 15 MethodHandle Kind 6, Index 167
167: Tag 10 MethodRef Class index 8, Name and type index 168
168: Tag 12 NameAndType Name index 143, Description index 140
169: Tag 16 MethodType Descriptor index 140
170: Tag 15 MethodHandle Kind 6, Index 171
171: Tag 10 MethodRef Class index 8, Name and type index 172
172: Tag 12 NameAndType Name index 142, Description index 140
173: Tag 15 MethodHandle Kind 6, Index 174
174: Tag 10 MethodRef Class index 8, Name and type index 175
175: Tag 12 NameAndType Name index 139, Description index 140
176: Tag 15 MethodHandle Kind 6, Index 177
177: Tag 10 MethodRef Class index 8, Name and type index 178
178: Tag 12 NameAndType Name index 138, Description index 135
179: Tag 16 MethodType Descriptor index 135
180: Tag 15 MethodHandle Kind 6, Index 181
181: Tag 10 MethodRef Class index 8, Name and type index 182
182: Tag 12 NameAndType Name index 137, Description index 135
183: Tag 15 MethodHandle Kind 6, Index 184
184: Tag 10 MethodRef Class index 8, Name and type index 185
185: Tag 12 NameAndType Name index 134, Description index 135
186: Tag 15 MethodHandle Kind 6, Index 187
187: Tag 10 MethodRef Class index 8, Name and type index 188
188: Tag 12 NameAndType Name index 133, Description index 129
189: Tag 16 MethodType Descriptor index 129
190: Tag 15 MethodHandle Kind 6, Index 191
191: Tag 10 MethodRef Class index 8, Name and type index 192
192: Tag 12 NameAndType Name index 128, Description index 129
193: Tag 1 Utf8 Value "InnerClasses"
194: Tag 7 Class Name index 195
195: Tag 1 Utf8 Value "java/lang/invoke/MethodHandles$Lookup"
196: Tag 7 Class Name index 197
197: Tag 1 Utf8 Value "java/lang/invoke/MethodHandles"
198: Tag 1 Utf8 Value "Lookup"

Flags: decimal 1057, hex 0421, binary 0000010000100001 public super abstract

This class: id 8, name org.wildfly.clustering.marshalling.AbstractAtomicTestCase

Super class: id 2, name java.lang.Object

No interfaces

Field name factory (index 11), type Lorg/wildfly/clustering/marshalling/MarshallingTesterFactory; (descriptor index 12)
Human type: org.wildfly.clustering.marshalling.MarshallingTesterFactory
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes

Method name <init> (index 5), type (Lorg/wildfly/clustering/marshalling/MarshallingTesterFactory;)V (descriptor index 106)
Human type: (org.wildfly.clustering.marshalling.MarshallingTesterFactory): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 70
Method name testAtomicBoolean (index 112), type ()V (descriptor index 6)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 127
Method attribute name Exceptions, size 4
Method attribute name RuntimeVisibleAnnotations, size 6
Method name testAtomicInteger (index 122), type ()V (descriptor index 6)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 149
Method attribute name Exceptions, size 4
Method attribute name RuntimeVisibleAnnotations, size 6
Method name testAtomicLong (index 124), type ()V (descriptor index 6)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 151
Method attribute name Exceptions, size 4
Method attribute name RuntimeVisibleAnnotations, size 6
Method name testAtomicReference (index 126), type ()V (descriptor index 6)
Human type: (): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 128
Method attribute name Exceptions, size 4
Method attribute name RuntimeVisibleAnnotations, size 6
Method name lambda$testAtomicReference$9 (index 128), type (Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)V (descriptor index 129)
Human type: (java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 64
Method name lambda$testAtomicReference$8 (index 133), type (Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)V (descriptor index 129)
Human type: (java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 64
Method name lambda$testAtomicLong$7 (index 134), type (Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V (descriptor index 135)
Human type: (java.util.concurrent.atomic.AtomicLong, java.util.concurrent.atomic.AtomicLong): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 64
Method name lambda$testAtomicLong$6 (index 137), type (Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V (descriptor index 135)
Human type: (java.util.concurrent.atomic.AtomicLong, java.util.concurrent.atomic.AtomicLong): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 64
Method name lambda$testAtomicLong$5 (index 138), type (Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V (descriptor index 135)
Human type: (java.util.concurrent.atomic.AtomicLong, java.util.concurrent.atomic.AtomicLong): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 64
Method name lambda$testAtomicInteger$4 (index 139), type (Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;)V (descriptor index 140)
Human type: (java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 66
Method name lambda$testAtomicInteger$3 (index 142), type (Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;)V (descriptor index 140)
Human type: (java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 66
Method name lambda$testAtomicInteger$2 (index 143), type (Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;)V (descriptor index 140)
Human type: (java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 66
Method name lambda$testAtomicBoolean$1 (index 144), type (Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;)V (descriptor index 145)
Human type: (java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicBoolean): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 70
Method name lambda$testAtomicBoolean$0 (index 147), type (Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/atomic/AtomicBoolean;)V (descriptor index 145)
Human type: (java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicBoolean): void
Flags: decimal 4106, hex 100a, binary 0001000000001010 private static synthetic
Method attribute name Code, size 70

Class attribute name SourceFile, size 2
Class attribute name BootstrapMethods, size 102
Class attribute name InnerClasses, size 10
