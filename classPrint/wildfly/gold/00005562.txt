AAAA 2
Version 52.0

Constant Pool size 125
1: Tag 10 MethodRef Class index 25, Name and type index 77
2: Tag 7 Class Name index 78
3: Tag 10 MethodRef Class index 2, Name and type index 77
4: Tag 9 FieldRef Class index 24, Name and type index 79
5: Tag 9 FieldRef Class index 24, Name and type index 80
6: Tag 7 Class Name index 81
7: Tag 7 Class Name index 82
8: Tag 10 MethodRef Class index 2, Name and type index 83
9: Tag 10 MethodRef Class index 7, Name and type index 84
10: Tag 10 MethodRef Class index 6, Name and type index 85
11: Tag 9 FieldRef Class index 24, Name and type index 86
12: Tag 11 InterfaceMethodRef Class index 87, Name and type index 88
13: Tag 10 MethodRef Class index 25, Name and type index 89
14: Tag 10 MethodRef Class index 90, Name and type index 91
15: Tag 9 FieldRef Class index 92, Name and type index 93
16: Tag 10 MethodRef Class index 19, Name and type index 94
17: Tag 10 MethodRef Class index 24, Name and type index 95
18: Tag 9 FieldRef Class index 96, Name and type index 97
19: Tag 7 Class Name index 98
20: Tag 8 String Contents 99
21: Tag 10 MethodRef Class index 96, Name and type index 100
22: Tag 8 String Contents 101
23: Tag 9 FieldRef Class index 24, Name and type index 102
24: Tag 7 Class Name index 103
25: Tag 7 Class Name index 104
26: Tag 7 Class Name index 105
27: Tag 7 Class Name index 106
28: Tag 1 Utf8 Value "SERVICE_NAME_BASE"
29: Tag 1 Utf8 Value "Lorg/jboss/msc/service/ServiceName;"
30: Tag 1 Utf8 Value "connectionFactoryValue"
31: Tag 1 Utf8 Value "Lorg/jboss/msc/value/InjectedValue;"
32: Tag 1 Utf8 Value "Signature"
33: Tag 1 Utf8 Value "Lorg/jboss/msc/value/InjectedValue<Ljava/lang/Object;>;"
34: Tag 1 Utf8 Value "reference"
35: Tag 1 Utf8 Value "Lorg/jboss/as/naming/ManagedReference;"
36: Tag 1 Utf8 Value "name"
37: Tag 1 Utf8 Value "Ljava/lang/String;"
38: Tag 1 Utf8 Value "<init>"
39: Tag 1 Utf8 Value "(Ljava/lang/String;)V"
40: Tag 1 Utf8 Value "Code"
41: Tag 1 Utf8 Value "LineNumberTable"
42: Tag 1 Utf8 Value "LocalVariableTable"
43: Tag 1 Utf8 Value "this"
44: Tag 1 Utf8 Value "Lorg/jboss/as/connector/services/resourceadapters/ConnectionFactoryReferenceFactoryService;"
45: Tag 1 Utf8 Value "getName"
46: Tag 1 Utf8 Value "()Ljava/lang/String;"
47: Tag 1 Utf8 Value "start"
48: Tag 1 Utf8 Value "(Lorg/jboss/msc/service/StartContext;)V"
49: Tag 1 Utf8 Value "startContext"
50: Tag 1 Utf8 Value "Lorg/jboss/msc/service/StartContext;"
51: Tag 1 Utf8 Value "Exceptions"
52: Tag 7 Class Name index 107
53: Tag 1 Utf8 Value "stop"
54: Tag 1 Utf8 Value "(Lorg/jboss/msc/service/StopContext;)V"
55: Tag 1 Utf8 Value "stopContext"
56: Tag 1 Utf8 Value "Lorg/jboss/msc/service/StopContext;"
57: Tag 1 Utf8 Value "getValue"
58: Tag 1 Utf8 Value "()Lorg/jboss/as/naming/ManagedReferenceFactory;"
59: Tag 7 Class Name index 108
60: Tag 7 Class Name index 109
61: Tag 1 Utf8 Value "getReference"
62: Tag 1 Utf8 Value "()Lorg/jboss/as/naming/ManagedReference;"
63: Tag 1 Utf8 Value "getConnectionFactoryInjector"
64: Tag 1 Utf8 Value "()Lorg/jboss/msc/inject/Injector;"
65: Tag 1 Utf8 Value "()Lorg/jboss/msc/inject/Injector<Ljava/lang/Object;>;"
66: Tag 1 Utf8 Value "getInstanceClassName"
67: Tag 1 Utf8 Value "value"
68: Tag 1 Utf8 Value "Ljava/lang/Object;"
69: Tag 1 Utf8 Value "StackMapTable"
70: Tag 1 Utf8 Value "getJndiViewInstanceValue"
71: Tag 1 Utf8 Value "()Ljava/lang/Object;"
72: Tag 1 Utf8 Value "<clinit>"
73: Tag 1 Utf8 Value "()V"
74: Tag 1 Utf8 Value "Ljava/lang/Object;Lorg/jboss/msc/service/Service<Lorg/jboss/as/naming/ManagedReferenceFactory;>;Lorg/jboss/as/naming/ContextListAndJndiViewManagedReferenceFactory;"
75: Tag 1 Utf8 Value "SourceFile"
76: Tag 1 Utf8 Value "ConnectionFactoryReferenceFactoryService.java"
77: Tag 12 NameAndType Name index 38, Description index 73
78: Tag 1 Utf8 Value "org/jboss/msc/value/InjectedValue"
79: Tag 12 NameAndType Name index 30, Description index 31
80: Tag 12 NameAndType Name index 36, Description index 37
81: Tag 1 Utf8 Value "org/jboss/as/naming/ValueManagedReference"
82: Tag 1 Utf8 Value "org/jboss/msc/value/ImmediateValue"
83: Tag 12 NameAndType Name index 57, Description index 71
84: Tag 12 NameAndType Name index 38, Description index 110
85: Tag 12 NameAndType Name index 38, Description index 111
86: Tag 12 NameAndType Name index 34, Description index 35
87: Tag 7 Class Name index 112
88: Tag 12 NameAndType Name index 113, Description index 71
89: Tag 12 NameAndType Name index 114, Description index 115
90: Tag 7 Class Name index 116
91: Tag 12 NameAndType Name index 45, Description index 46
92: Tag 7 Class Name index 117
93: Tag 12 NameAndType Name index 118, Description index 37
94: Tag 12 NameAndType Name index 119, Description index 120
95: Tag 12 NameAndType Name index 57, Description index 58
96: Tag 7 Class Name index 121
97: Tag 12 NameAndType Name index 122, Description index 29
98: Tag 1 Utf8 Value "java/lang/String"
99: Tag 1 Utf8 Value "connection-factory"
100: Tag 12 NameAndType Name index 123, Description index 124
101: Tag 1 Utf8 Value "reference-factory"
102: Tag 12 NameAndType Name index 28, Description index 29
103: Tag 1 Utf8 Value "org/jboss/as/connector/services/resourceadapters/ConnectionFactoryReferenceFactoryService"
104: Tag 1 Utf8 Value "java/lang/Object"
105: Tag 1 Utf8 Value "org/jboss/msc/service/Service"
106: Tag 1 Utf8 Value "org/jboss/as/naming/ContextListAndJndiViewManagedReferenceFactory"
107: Tag 1 Utf8 Value "org/jboss/msc/service/StartException"
108: Tag 1 Utf8 Value "java/lang/IllegalStateException"
109: Tag 1 Utf8 Value "java/lang/IllegalArgumentException"
110: Tag 1 Utf8 Value "(Ljava/lang/Object;)V"
111: Tag 1 Utf8 Value "(Lorg/jboss/msc/value/Value;)V"
112: Tag 1 Utf8 Value "org/jboss/as/naming/ManagedReference"
113: Tag 1 Utf8 Value "getInstance"
114: Tag 1 Utf8 Value "getClass"
115: Tag 1 Utf8 Value "()Ljava/lang/Class;"
116: Tag 1 Utf8 Value "java/lang/Class"
117: Tag 1 Utf8 Value "org/jboss/as/naming/ContextListManagedReferenceFactory"
118: Tag 1 Utf8 Value "DEFAULT_INSTANCE_CLASS_NAME"
119: Tag 1 Utf8 Value "valueOf"
120: Tag 1 Utf8 Value "(Ljava/lang/Object;)Ljava/lang/String;"
121: Tag 1 Utf8 Value "org/jboss/msc/service/ServiceName"
122: Tag 1 Utf8 Value "JBOSS"
123: Tag 1 Utf8 Value "append"
124: Tag 1 Utf8 Value "([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;"

Flags: decimal 33, hex 0021, binary 0000000000100001 public super

This class: id 24, name org.jboss.as.connector.services.resourceadapters.ConnectionFactoryReferenceFactoryService

Super class: id 25, name java.lang.Object

Implements class ids 26 27
Implements names org.jboss.msc.service.Service org.jboss.as.naming.ContextListAndJndiViewManagedReferenceFactory

Field name SERVICE_NAME_BASE (index 28), type Lorg/jboss/msc/service/ServiceName; (descriptor index 29)
Human type: org.jboss.msc.service.ServiceName
Flags: decimal 25, hex 0019, binary 0000000000011001 public static final
No field attributes
Field name connectionFactoryValue (index 30), type Lorg/jboss/msc/value/InjectedValue; (descriptor index 31)
Human type: org.jboss.msc.value.InjectedValue
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
Field attribute name Signature, size 2
Field name reference (index 34), type Lorg/jboss/as/naming/ManagedReference; (descriptor index 35)
Human type: org.jboss.as.naming.ManagedReference
Flags: decimal 2, hex 0002, binary 0000000000000010 private
No field attributes
Field name name (index 36), type Ljava/lang/String; (descriptor index 37)
Human type: java.lang.String
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes

Method name <init> (index 38), type (Ljava/lang/String;)V (descriptor index 39)
Human type: (java.lang.String): void
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 85
Method name getName (index 45), type ()Ljava/lang/String; (descriptor index 46)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method name start (index 47), type (Lorg/jboss/msc/service/StartContext;)V (descriptor index 48)
Human type: (org.jboss.msc.service.StartContext): void
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 82
Method attribute name Exceptions, size 4
Method name stop (index 53), type (Lorg/jboss/msc/service/StopContext;)V (descriptor index 54)
Human type: (org.jboss.msc.service.StopContext): void
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 62
Method name getValue (index 57), type ()Lorg/jboss/as/naming/ManagedReferenceFactory; (descriptor index 58)
Human type: (): org.jboss.as.naming.ManagedReferenceFactory
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 44
Method attribute name Exceptions, size 6
Method name getReference (index 61), type ()Lorg/jboss/as/naming/ManagedReference; (descriptor index 62)
Human type: (): org.jboss.as.naming.ManagedReference
Flags: decimal 33, hex 0021, binary 0000000000100001 public synchronized
Method attribute name Code, size 47
Method name getConnectionFactoryInjector (index 63), type ()Lorg/jboss/msc/inject/Injector; (descriptor index 64)
Human type: (): org.jboss.msc.inject.Injector
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 47
Method attribute name Signature, size 2
Method name getInstanceClassName (index 66), type ()Ljava/lang/String; (descriptor index 46)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 118
Method name getJndiViewInstanceValue (index 70), type ()Ljava/lang/String; (descriptor index 46)
Human type: (): java.lang.String
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 95
Method name getValue (index 57), type ()Ljava/lang/Object; (descriptor index 71)
Human type: (): java.lang.Object
Flags: decimal 4161, hex 1041, binary 0001000001000001 public bridge synthetic
Method attribute name Code, size 47
Method attribute name Exceptions, size 6
Method name <clinit> (index 72), type ()V (descriptor index 73)
Human type: (): void
Flags: decimal 8, hex 0008, binary 0000000000001000 static
Method attribute name Code, size 55

Class attribute name Signature, size 2
Class attribute name SourceFile, size 2
