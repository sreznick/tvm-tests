Version 52.0

Constant Pool size 133
1: Tag 10 MethodRef Class index 2, Name and type index 3
2: Tag 7 Class Name index 4
3: Tag 12 NameAndType Name index 5, Description index 6
4: Tag 1 Utf8 Value "org/jboss/as/ee/component/ManagedReferenceLifecycleMethodInterceptor"
5: Tag 1 Utf8 Value "<init>"
6: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/lang/reflect/Method;ZZ)V"
7: Tag 10 MethodRef Class index 8, Name and type index 9
8: Tag 7 Class Name index 10
9: Tag 12 NameAndType Name index 5, Description index 11
10: Tag 1 Utf8 Value "java/lang/Object"
11: Tag 1 Utf8 Value "()V"
12: Tag 9 FieldRef Class index 2, Name and type index 13
13: Tag 12 NameAndType Name index 14, Description index 15
14: Tag 1 Utf8 Value "contextKey"
15: Tag 1 Utf8 Value "Ljava/lang/Object;"
16: Tag 9 FieldRef Class index 2, Name and type index 17
17: Tag 12 NameAndType Name index 18, Description index 19
18: Tag 1 Utf8 Value "method"
19: Tag 1 Utf8 Value "Ljava/lang/reflect/Method;"
20: Tag 9 FieldRef Class index 2, Name and type index 21
21: Tag 12 NameAndType Name index 22, Description index 23
22: Tag 1 Utf8 Value "changeMethod"
23: Tag 1 Utf8 Value "Z"
24: Tag 9 FieldRef Class index 2, Name and type index 25
25: Tag 12 NameAndType Name index 26, Description index 23
26: Tag 1 Utf8 Value "lifecycleMethod"
27: Tag 10 MethodRef Class index 28, Name and type index 29
28: Tag 7 Class Name index 30
29: Tag 12 NameAndType Name index 31, Description index 32
30: Tag 1 Utf8 Value "java/lang/reflect/Method"
31: Tag 1 Utf8 Value "getParameterTypes"
32: Tag 1 Utf8 Value "()[Ljava/lang/Class;"
33: Tag 9 FieldRef Class index 2, Name and type index 34
34: Tag 12 NameAndType Name index 35, Description index 23
35: Tag 1 Utf8 Value "withContext"
36: Tag 7 Class Name index 37
37: Tag 1 Utf8 Value "org/jboss/as/ee/component/ComponentInstance"
38: Tag 10 MethodRef Class index 39, Name and type index 40
39: Tag 7 Class Name index 41
40: Tag 12 NameAndType Name index 42, Description index 43
41: Tag 1 Utf8 Value "org/jboss/invocation/InterceptorContext"
42: Tag 1 Utf8 Value "getPrivateData"
43: Tag 1 Utf8 Value "(Ljava/lang/Class;)Ljava/lang/Object;"
44: Tag 11 InterfaceMethodRef Class index 36, Name and type index 45
45: Tag 12 NameAndType Name index 46, Description index 47
46: Tag 1 Utf8 Value "getInstanceData"
47: Tag 1 Utf8 Value "(Ljava/lang/Object;)Ljava/lang/Object;"
48: Tag 7 Class Name index 49
49: Tag 1 Utf8 Value "org/jboss/as/naming/ManagedReference"
50: Tag 11 InterfaceMethodRef Class index 48, Name and type index 51
51: Tag 12 NameAndType Name index 52, Description index 53
52: Tag 1 Utf8 Value "getInstance"
53: Tag 1 Utf8 Value "()Ljava/lang/Object;"
54: Tag 10 MethodRef Class index 39, Name and type index 55
55: Tag 12 NameAndType Name index 56, Description index 57
56: Tag 1 Utf8 Value "getMethod"
57: Tag 1 Utf8 Value "()Ljava/lang/reflect/Method;"
58: Tag 10 MethodRef Class index 39, Name and type index 59
59: Tag 12 NameAndType Name index 60, Description index 61
60: Tag 1 Utf8 Value "setMethod"
61: Tag 1 Utf8 Value "(Ljava/lang/reflect/Method;)V"
62: Tag 10 MethodRef Class index 39, Name and type index 63
63: Tag 12 NameAndType Name index 64, Description index 65
64: Tag 1 Utf8 Value "getInvocationContext"
65: Tag 1 Utf8 Value "()Ljavax/interceptor/InvocationContext;"
66: Tag 10 MethodRef Class index 28, Name and type index 67
67: Tag 12 NameAndType Name index 68, Description index 69
68: Tag 1 Utf8 Value "invoke"
69: Tag 1 Utf8 Value "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"
70: Tag 10 MethodRef Class index 39, Name and type index 71
71: Tag 12 NameAndType Name index 72, Description index 53
72: Tag 1 Utf8 Value "proceed"
73: Tag 7 Class Name index 74
74: Tag 1 Utf8 Value "java/lang/IllegalAccessException"
75: Tag 7 Class Name index 76
76: Tag 1 Utf8 Value "java/lang/IllegalAccessError"
77: Tag 10 MethodRef Class index 73, Name and type index 78
78: Tag 12 NameAndType Name index 79, Description index 80
79: Tag 1 Utf8 Value "getMessage"
80: Tag 1 Utf8 Value "()Ljava/lang/String;"
81: Tag 10 MethodRef Class index 75, Name and type index 82
82: Tag 12 NameAndType Name index 5, Description index 83
83: Tag 1 Utf8 Value "(Ljava/lang/String;)V"
84: Tag 10 MethodRef Class index 73, Name and type index 85
85: Tag 12 NameAndType Name index 86, Description index 87
86: Tag 1 Utf8 Value "getStackTrace"
87: Tag 1 Utf8 Value "()[Ljava/lang/StackTraceElement;"
88: Tag 10 MethodRef Class index 75, Name and type index 89
89: Tag 12 NameAndType Name index 90, Description index 91
90: Tag 1 Utf8 Value "setStackTrace"
91: Tag 1 Utf8 Value "([Ljava/lang/StackTraceElement;)V"
92: Tag 7 Class Name index 93
93: Tag 1 Utf8 Value "java/lang/reflect/InvocationTargetException"
94: Tag 10 MethodRef Class index 92, Name and type index 95
95: Tag 12 NameAndType Name index 96, Description index 97
96: Tag 1 Utf8 Value "getCause"
97: Tag 1 Utf8 Value "()Ljava/lang/Throwable;"
98: Tag 10 MethodRef Class index 99, Name and type index 100
99: Tag 7 Class Name index 101
100: Tag 12 NameAndType Name index 102, Description index 103
101: Tag 1 Utf8 Value "org/jboss/invocation/Interceptors"
102: Tag 1 Utf8 Value "rethrow"
103: Tag 1 Utf8 Value "(Ljava/lang/Throwable;)Ljava/lang/Exception;"
104: Tag 7 Class Name index 105
105: Tag 1 Utf8 Value "org/jboss/invocation/Interceptor"
106: Tag 1 Utf8 Value "(Ljava/lang/Object;Ljava/lang/reflect/Method;Z)V"
107: Tag 1 Utf8 Value "Code"
108: Tag 1 Utf8 Value "LineNumberTable"
109: Tag 1 Utf8 Value "LocalVariableTable"
110: Tag 1 Utf8 Value "this"
111: Tag 1 Utf8 Value "Lorg/jboss/as/ee/component/ManagedReferenceLifecycleMethodInterceptor;"
112: Tag 1 Utf8 Value "StackMapTable"
113: Tag 1 Utf8 Value "processInvocation"
114: Tag 1 Utf8 Value "(Lorg/jboss/invocation/InterceptorContext;)Ljava/lang/Object;"
115: Tag 1 Utf8 Value "oldMethod"
116: Tag 1 Utf8 Value "n"
117: Tag 1 Utf8 Value "Ljava/lang/IllegalAccessError;"
118: Tag 1 Utf8 Value "e"
119: Tag 1 Utf8 Value "Ljava/lang/IllegalAccessException;"
120: Tag 1 Utf8 Value "Ljava/lang/reflect/InvocationTargetException;"
121: Tag 1 Utf8 Value "context"
122: Tag 1 Utf8 Value "Lorg/jboss/invocation/InterceptorContext;"
123: Tag 1 Utf8 Value "reference"
124: Tag 1 Utf8 Value "Lorg/jboss/as/naming/ManagedReference;"
125: Tag 1 Utf8 Value "instance"
126: Tag 7 Class Name index 127
127: Tag 1 Utf8 Value "java/lang/Throwable"
128: Tag 1 Utf8 Value "Exceptions"
129: Tag 7 Class Name index 130
130: Tag 1 Utf8 Value "java/lang/Exception"
131: Tag 1 Utf8 Value "SourceFile"
132: Tag 1 Utf8 Value "ManagedReferenceLifecycleMethodInterceptor.java"

Flags: decimal 48, hex 0030, binary 0000000000110000 final super

This class: id 2, name org.jboss.as.ee.component.ManagedReferenceLifecycleMethodInterceptor

Super class: id 8, name java.lang.Object

Implements class ids 104
Implements names org.jboss.invocation.Interceptor

Field name contextKey (index 14), type Ljava/lang/Object; (descriptor index 15)
Human type: java.lang.Object
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name method (index 18), type Ljava/lang/reflect/Method; (descriptor index 19)
Human type: java.lang.reflect.Method
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name changeMethod (index 22), type Z (descriptor index 23)
Human type: boolean
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name lifecycleMethod (index 26), type Z (descriptor index 23)
Human type: boolean
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes
Field name withContext (index 35), type Z (descriptor index 23)
Human type: boolean
Flags: decimal 18, hex 0012, binary 0000000000010010 private final
No field attributes

Method name <init> (index 5), type (Ljava/lang/Object;Ljava/lang/reflect/Method;Z)V (descriptor index 106)
Human type: (java.lang.Object, java.lang.reflect.Method, boolean): void
Flags: decimal 0, hex 0000, binary 0000000000000000
Method attribute name Code, size 85
Method name <init> (index 5), type (Ljava/lang/Object;Ljava/lang/reflect/Method;ZZ)V (descriptor index 6)
Human type: (java.lang.Object, java.lang.reflect.Method, boolean, boolean): void
Flags: decimal 0, hex 0000, binary 0000000000000000
Method attribute name Code, size 201
Method name processInvocation (index 113), type (Lorg/jboss/invocation/InterceptorContext;)Ljava/lang/Object; (descriptor index 114)
Human type: (org.jboss.invocation.InterceptorContext): java.lang.Object
Flags: decimal 1, hex 0001, binary 0000000000000001 public
Method attribute name Code, size 617
Method attribute name Exceptions, size 4

Class attribute name SourceFile, size 2
